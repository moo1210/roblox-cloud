/**
 * Cloud API
 * Open Cloud 2.0
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../../../common/http/http';

/**
* A mini-community within Roblox for communication, discussions, and more.
*/
export class Group {
    /**
    * The resource path of the group.   Format: groups/{group}
    */
    'path'?: string;
    /**
    * The timestamp when the group was created.
    */
    'createTime'?: Date;
    /**
    * The timestamp when the group was last updated.
    */
    'updateTime'?: Date;
    /**
    * A unique ID that identifies the group.
    */
    'id'?: string;
    /**
    * The name of the group.   Must be non-empty. Has a maximum limit of 50 characters.
    */
    'displayName'?: string;
    /**
    * The description of the group.   Has a maximum limit of 1000 characters.
    */
    'description'?: string;
    /**
    * The resource path of the owner.   If the group is abandoned and has no owner, this field is not returned.
    */
    'owner'?: string;
    /**
    * The total number of members within a group.
    */
    'memberCount'?: number;
    /**
    * Whether the group allows public entry.
    */
    'publicEntryAllowed'?: boolean;
    /**
    * Whether the group is locked.   A locked group is a group that has been  moderated/banned by Roblox.
    */
    'locked'?: boolean;
    /**
    * Whether the group has the verified badge.
    */
    'verified'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "path",
            "baseName": "path",
            "type": "string",
            "format": ""
        },
        {
            "name": "createTime",
            "baseName": "createTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "updateTime",
            "baseName": "updateTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "displayName",
            "baseName": "displayName",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "owner",
            "baseName": "owner",
            "type": "string",
            "format": ""
        },
        {
            "name": "memberCount",
            "baseName": "memberCount",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "publicEntryAllowed",
            "baseName": "publicEntryAllowed",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "locked",
            "baseName": "locked",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "verified",
            "baseName": "verified",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Group.attributeTypeMap;
    }

    public constructor() {
    }
}

