/**
 * Cloud API
 * Open Cloud 2.0
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../../../common/http/http';

/**
* Represents a decimal number in a form similar to scientific notation.   Examples:   - 17            === `{significand: 17   exponent: 0} (or just {significand:     17})`   - -0.005        === `{significand: -5   exponent: -3}`   - 33.5 million  === `{significand: 335  exponent: 5}`   - 11/8 (1.375)  === `{significand: 1375 exponent: -3}`   Note that the range of a Decimal exceeds that of a JSON `number` (double), as  well as that of a `decimal64`.
*/
export class Decimal {
    /**
    * The significant digits of the number.
    */
    'significand'?: number;
    /**
    * Represents the position of the decimal point within the significand.   When the exponent is 0, the value of the Decimal is simply the value of  `significand`.   When the exponent is greater than 0, represents the number of trailing  zeroes after the significant digits.   When the exponent is less than 0, represents how many of the significant  digits (and implicit leading zeroes, as needed) come after the decmial  point.
    */
    'exponent'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "significand",
            "baseName": "significand",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "exponent",
            "baseName": "exponent",
            "type": "number",
            "format": "int32"
        }    ];

    static getAttributeTypeMap() {
        return Decimal.attributeTypeMap;
    }

    public constructor() {
    }
}

