/**
 * Cloud API
 * Open Cloud 2.0
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AvatarAsset } from '../models/AvatarAsset';
import { BodyAssets } from '../models/BodyAssets';
import { BodyColors } from '../models/BodyColors';
import { BodyScale } from '../models/BodyScale';
import { HttpFile } from '../../../common/http/http';

/**
* Represents an avatar body -- outfit that consists of multiple bodypart  assets. The body is created in experience  Fields available for update: colors, body_assets, other_assets, scale
*/
export class AvatarBody {
    /**
    * The resource path of the AvatarBody.  Format: avatar-bodies/{avatar_body}
    */
    'path'?: string;
    /**
    * User-defined name
    */
    'name': string;
    'colors'?: BodyColors;
    'bodyAssets'?: BodyAssets;
    'bodyScale'?: BodyScale;
    /**
    * Assets that are not body parts
    */
    'otherAssets'?: Array<AvatarAsset>;
    /**
    * Body type  Possible values:    | Value | Description |   | --- | --- |   | PLAYER_AVATAR_TYPE_UNSPECIFIED | default value, unspecified (invalid) avatar type |   | PLAYER_AVATAR_TYPE_R6 | represents R6 avatar type |   | PLAYER_AVATAR_TYPE_R15 | represents R15 avatar type |
    */
    'avatarType'?: AvatarBodyAvatarTypeEnum;
    /**
    * Operation Id  go/aip/not-precedent: This is a short-term solution to meet Expedition time  constraints that will only be exposed to Engine-side internal code. Methods  using this resource will never be exposed through API Gateway while this  field exists.
    */
    'operationId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "path",
            "baseName": "path",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "colors",
            "baseName": "colors",
            "type": "BodyColors",
            "format": ""
        },
        {
            "name": "bodyAssets",
            "baseName": "bodyAssets",
            "type": "BodyAssets",
            "format": ""
        },
        {
            "name": "bodyScale",
            "baseName": "bodyScale",
            "type": "BodyScale",
            "format": ""
        },
        {
            "name": "otherAssets",
            "baseName": "otherAssets",
            "type": "Array<AvatarAsset>",
            "format": ""
        },
        {
            "name": "avatarType",
            "baseName": "avatarType",
            "type": "AvatarBodyAvatarTypeEnum",
            "format": "enum"
        },
        {
            "name": "operationId",
            "baseName": "operationId",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return AvatarBody.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum AvatarBodyAvatarTypeEnum {
    Unspecified = 'PLAYER_AVATAR_TYPE_UNSPECIFIED',
    R6 = 'PLAYER_AVATAR_TYPE_R6',
    R15 = 'PLAYER_AVATAR_TYPE_R15'
}

