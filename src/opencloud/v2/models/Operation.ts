/**
 * Cloud API
 * Open Cloud 2.0
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { GoogleProtobufAny } from '../models/GoogleProtobufAny';
import { Status } from '../models/Status';
import { HttpFile } from '../../../common/http/http';

/**
* This resource represents a long-running operation that is the result of a  network API call.
*/
export class Operation {
    /**
    * The server-assigned path, which is only unique within the same service that  originally returns it. If you use the default HTTP mapping, the  `path` should be a resource path ending with `operations/{unique_id}`.
    */
    'path'?: string;
    'metadata'?: GoogleProtobufAny;
    /**
    * If the value is `false`, it means the operation is still in progress.  If `true`, the operation is completed, and either `error` or `response` is  available.
    */
    'done'?: boolean;
    'error'?: Status;
    'response'?: GoogleProtobufAny;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "path",
            "baseName": "path",
            "type": "string",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "GoogleProtobufAny",
            "format": ""
        },
        {
            "name": "done",
            "baseName": "done",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "error",
            "baseName": "error",
            "type": "Status",
            "format": ""
        },
        {
            "name": "response",
            "baseName": "response",
            "type": "GoogleProtobufAny",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Operation.attributeTypeMap;
    }

    public constructor() {
    }
}

