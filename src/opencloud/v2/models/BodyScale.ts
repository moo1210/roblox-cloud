/**
 * Cloud API
 * Open Cloud 2.0
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../../../common/http/http';

/**
* Represent scale factors of different aspects of an avatar body.  Need to be in sync with avatar-core source definition:  https://github.rbx.com/Roblox/avatar-core/blob/master/protos/roblox/avatarcore/outfits/v1beta1/outfits.proto#L27
*/
export class BodyScale {
    /**
    * Determines by what factor the height (top-to-bottom distance) is scaled.  Range 0.9-1.05.
    */
    'heightScale': number;
    /**
    * Determines by what factor the width (left-to-right distance) is  scaled. Range: 0.7-1.0
    */
    'widthScale': number;
    /**
    * Determines by what factor the Head is scaled. Range 0.95-1.0
    */
    'headScale'?: number;
    /**
    * Determines how wide (0) or narrow (1) a Humanoid rig. Range 0.0-1.0
    */
    'proportion'?: number;
    /**
    * Determines by which the shape of a Humanoid rig is interpolated. Range  0.0-1.0
    */
    'bodyType'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "heightScale",
            "baseName": "heightScale",
            "type": "number",
            "format": "double"
        },
        {
            "name": "widthScale",
            "baseName": "widthScale",
            "type": "number",
            "format": "double"
        },
        {
            "name": "headScale",
            "baseName": "headScale",
            "type": "number",
            "format": "double"
        },
        {
            "name": "proportion",
            "baseName": "proportion",
            "type": "number",
            "format": "double"
        },
        {
            "name": "bodyType",
            "baseName": "bodyType",
            "type": "number",
            "format": "double"
        }    ];

    static getAttributeTypeMap() {
        return BodyScale.attributeTypeMap;
    }

    public constructor() {
    }
}

