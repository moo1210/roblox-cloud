/**
 * Locale Api v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RobloxLocaleApiLanguage } from '../models/RobloxLocaleApiLanguage';
import { HttpFile } from '../../../common/http/http';

/**
* Model for Supported locale
*/
export class RobloxLocaleApiSupportedLocale {
    /**
    * id of supported locale
    */
    'id'?: number;
    /**
    * locale of supported locale. Example \"en-us\"
    */
    'locale'?: string;
    /**
    * name of supported locale. Example \"English(US)\"
    */
    'name'?: string;
    /**
    * Name of supported locale in native language. Example \"English\"
    */
    'nativeName'?: string;
    'language'?: RobloxLocaleApiLanguage;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "locale",
            "baseName": "locale",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "nativeName",
            "baseName": "nativeName",
            "type": "string",
            "format": ""
        },
        {
            "name": "language",
            "baseName": "language",
            "type": "RobloxLocaleApiLanguage",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return RobloxLocaleApiSupportedLocale.attributeTypeMap;
    }

    public constructor() {
    }
}

