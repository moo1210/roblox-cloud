/**
 * Economy Api v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../../../common/http/http';

/**
* The response model for the Cashout Widgent endpoint
*/
export class RobloxEconomyApiControllersV1CashoutInfoResponseModel {
    'hasCurrencyOperationError'?: boolean;
    'currencyOperationErrorMessage'?: string;
    /**
    * Whether only exchange rates should be shown
    */
    'showOnlyExchangeRates'?: boolean;
    /**
    * Whether the user meets membership requirements.
    */
    'meetsMembershipRequirements'?: boolean;
    /**
    * Whether the user\'s email is verified
    */
    'emailIsVerified'?: boolean;
    /**
    * Whether the user is blacklisted from DevEx
    */
    'isImbursementBlacklistUser'?: boolean;
    /**
    * Whether the user can proceed to cash out
    */
    'canProceedToCashout'?: boolean;
    /**
    * Whether to show the progress bar
    */
    'showProgressBar'?: boolean;
    /**
    * The user\'s Robux balance as a percentage of the minimum amount for DevEx.  If the user\'s Robux balance exceeds the target, this value will be 100.
    */
    'percentRobux'?: number;
    /**
    * The minimum amount of Robux needed for DevEx
    */
    'minRobuxToCashOut'?: number;
    /**
    * The max Robux that can be cashed out
    */
    'maxRobuxCanCashOut'?: number;
    /**
    * The last imbursement status for the user, if any
    */
    'lastImbursementStatus'?: string;
    /**
    * The submission date for the last imbursement request, if any.
    */
    'lastImbursementSubmissionDate'?: Date;
    /**
    * The conversion percent
    */
    'conversionPercent'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "hasCurrencyOperationError",
            "baseName": "hasCurrencyOperationError",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "currencyOperationErrorMessage",
            "baseName": "currencyOperationErrorMessage",
            "type": "string",
            "format": ""
        },
        {
            "name": "showOnlyExchangeRates",
            "baseName": "showOnlyExchangeRates",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "meetsMembershipRequirements",
            "baseName": "meetsMembershipRequirements",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "emailIsVerified",
            "baseName": "emailIsVerified",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isImbursementBlacklistUser",
            "baseName": "isImbursementBlacklistUser",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "canProceedToCashout",
            "baseName": "canProceedToCashout",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "showProgressBar",
            "baseName": "showProgressBar",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "percentRobux",
            "baseName": "percentRobux",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "minRobuxToCashOut",
            "baseName": "minRobuxToCashOut",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "maxRobuxCanCashOut",
            "baseName": "maxRobuxCanCashOut",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "lastImbursementStatus",
            "baseName": "lastImbursementStatus",
            "type": "string",
            "format": ""
        },
        {
            "name": "lastImbursementSubmissionDate",
            "baseName": "lastImbursementSubmissionDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "conversionPercent",
            "baseName": "conversionPercent",
            "type": "number",
            "format": "double"
        }    ];

    static getAttributeTypeMap() {
        return RobloxEconomyApiControllersV1CashoutInfoResponseModel.attributeTypeMap;
    }

    public constructor() {
    }
}

