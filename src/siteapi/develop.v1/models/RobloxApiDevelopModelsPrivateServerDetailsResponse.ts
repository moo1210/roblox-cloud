/**
 * Develop Api v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../../../common/http/http';

/**
* Model for private server details responses from the UniverseSettings controller.
*/
export class RobloxApiDevelopModelsPrivateServerDetailsResponse {
    /**
    * Whether or not VIP servers are enabled on this universe.
    */
    'isEnabled'?: boolean;
    /**
    * The price of the VIP server.
    */
    'price'?: number;
    /**
    * The number of active VIP servers for this universe. A negative value indicates at least this many exist (i.e. -100 means 100+ active private servers).
    */
    'activeServersCount'?: number;
    /**
    * The number of active VIP server subscriptions. A negative value indicates at least this many exist (i.e. -100 means 100+ active subscriptions).
    */
    'activeSubscriptionsCount'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "isEnabled",
            "baseName": "isEnabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "price",
            "baseName": "price",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "activeServersCount",
            "baseName": "activeServersCount",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "activeSubscriptionsCount",
            "baseName": "activeSubscriptionsCount",
            "type": "number",
            "format": "int64"
        }    ];

    static getAttributeTypeMap() {
        return RobloxApiDevelopModelsPrivateServerDetailsResponse.attributeTypeMap;
    }

    public constructor() {
    }
}

