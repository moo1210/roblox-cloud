/**
 * Develop Api v2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../../../common/http/http';

/**
* A model containing information about a place to be configured
*/
export class RobloxApiDevelopModelsPlaceConfigurationModelV2 {
    /**
    * The name for the place.
    */
    'name'?: string;
    /**
    * The new description for the place.
    */
    'description'?: string;
    /**
    * The max number of players for the place.
    */
    'maxPlayerCount'?: number;
    /**
    * The social slot type for the place. Determines how users are placed into servers.   Examples:        Automatic,       Empty,       Custom
    */
    'socialSlotType'?: string;
    /**
    * The number of social slots for the place when the slot type is custom.
    */
    'customSocialSlotsCount'?: number;
    /**
    * Determines if copying of the place is allowed.
    */
    'allowCopying'?: boolean;
    /**
    * List of allowed gear types
    */
    'allowedGearTypes'?: Array<string>;
    /**
    * If all genres are allowed, or only the experience type
    */
    'isAllGenresAllowed'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "maxPlayerCount",
            "baseName": "maxPlayerCount",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "socialSlotType",
            "baseName": "socialSlotType",
            "type": "string",
            "format": ""
        },
        {
            "name": "customSocialSlotsCount",
            "baseName": "customSocialSlotsCount",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "allowCopying",
            "baseName": "allowCopying",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "allowedGearTypes",
            "baseName": "allowedGearTypes",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "isAllGenresAllowed",
            "baseName": "isAllGenresAllowed",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return RobloxApiDevelopModelsPlaceConfigurationModelV2.attributeTypeMap;
    }

    public constructor() {
    }
}

