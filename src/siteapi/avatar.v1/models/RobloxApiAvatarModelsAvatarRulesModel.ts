/**
 * Avatar Api v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RobloxApiAvatarModelsAssetTypeRulesModel } from '../models/RobloxApiAvatarModelsAssetTypeRulesModel';
import { RobloxApiAvatarModelsAvatarRulesModelAccessoryRefinementLowerBounds } from '../models/RobloxApiAvatarModelsAvatarRulesModelAccessoryRefinementLowerBounds';
import { RobloxApiAvatarModelsBodyColorModel } from '../models/RobloxApiAvatarModelsBodyColorModel';
import { RobloxApiAvatarModelsDefaultClothingAssets } from '../models/RobloxApiAvatarModelsDefaultClothingAssets';
import { RobloxApiAvatarModelsScaleRulesModel } from '../models/RobloxApiAvatarModelsScaleRulesModel';
import { HttpFile } from '../../../common/http/http';

/**
* A model containing details about avatar-related business rules
*/
export class RobloxApiAvatarModelsAvatarRulesModel {
    /**
    * The avatar type
    */
    'playerAvatarTypes'?: Array<RobloxApiAvatarModelsAvatarRulesModelPlayerAvatarTypesEnum>;
    /**
    * The scales
    */
    'scales'?: { [key: string]: RobloxApiAvatarModelsScaleRulesModel; };
    /**
    * The assets worn on the character
    */
    'wearableAssetTypes'?: Array<RobloxApiAvatarModelsAssetTypeRulesModel>;
    /**
    * The list of asset types for Accessory Refinement.
    */
    'accessoryRefinementTypes'?: Set<RobloxApiAvatarModelsAvatarRulesModelAccessoryRefinementTypesEnum>;
    'accessoryRefinementLowerBounds'?: RobloxApiAvatarModelsAvatarRulesModelAccessoryRefinementLowerBounds;
    'accessoryRefinementUpperBounds'?: RobloxApiAvatarModelsAvatarRulesModelAccessoryRefinementLowerBounds;
    /**
    * The full set of usable body colors
    */
    'bodyColorsPalette'?: Array<RobloxApiAvatarModelsBodyColorModel>;
    /**
    * The basic set of body colors
    */
    'basicBodyColorsPalette'?: Array<RobloxApiAvatarModelsBodyColorModel>;
    /**
    * The minimum Delta-E difference in body colors  for default clothing not to be applied
    */
    'minimumDeltaEBodyColorDifference'?: number;
    /**
    * Whether proportion and bodyType scales are allowed to be set by the authenticated user
    */
    'proportionsAndBodyTypeEnabledForUser'?: boolean;
    'defaultClothingAssetLists'?: RobloxApiAvatarModelsDefaultClothingAssets;
    /**
    * Whether or not bundles are enabled for the specific user
    */
    'bundlesEnabledForUser'?: boolean;
    /**
    * Whether or not emotes are enabled
    */
    'emotesEnabledForUser'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "playerAvatarTypes",
            "baseName": "playerAvatarTypes",
            "type": "Array<RobloxApiAvatarModelsAvatarRulesModelPlayerAvatarTypesEnum>",
            "format": "int32"
        },
        {
            "name": "scales",
            "baseName": "scales",
            "type": "{ [key: string]: RobloxApiAvatarModelsScaleRulesModel; }",
            "format": ""
        },
        {
            "name": "wearableAssetTypes",
            "baseName": "wearableAssetTypes",
            "type": "Array<RobloxApiAvatarModelsAssetTypeRulesModel>",
            "format": ""
        },
        {
            "name": "accessoryRefinementTypes",
            "baseName": "accessoryRefinementTypes",
            "type": "Set<RobloxApiAvatarModelsAvatarRulesModelAccessoryRefinementTypesEnum>",
            "format": "int32"
        },
        {
            "name": "accessoryRefinementLowerBounds",
            "baseName": "accessoryRefinementLowerBounds",
            "type": "RobloxApiAvatarModelsAvatarRulesModelAccessoryRefinementLowerBounds",
            "format": ""
        },
        {
            "name": "accessoryRefinementUpperBounds",
            "baseName": "accessoryRefinementUpperBounds",
            "type": "RobloxApiAvatarModelsAvatarRulesModelAccessoryRefinementLowerBounds",
            "format": ""
        },
        {
            "name": "bodyColorsPalette",
            "baseName": "bodyColorsPalette",
            "type": "Array<RobloxApiAvatarModelsBodyColorModel>",
            "format": ""
        },
        {
            "name": "basicBodyColorsPalette",
            "baseName": "basicBodyColorsPalette",
            "type": "Array<RobloxApiAvatarModelsBodyColorModel>",
            "format": ""
        },
        {
            "name": "minimumDeltaEBodyColorDifference",
            "baseName": "minimumDeltaEBodyColorDifference",
            "type": "number",
            "format": "double"
        },
        {
            "name": "proportionsAndBodyTypeEnabledForUser",
            "baseName": "proportionsAndBodyTypeEnabledForUser",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "defaultClothingAssetLists",
            "baseName": "defaultClothingAssetLists",
            "type": "RobloxApiAvatarModelsDefaultClothingAssets",
            "format": ""
        },
        {
            "name": "bundlesEnabledForUser",
            "baseName": "bundlesEnabledForUser",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "emotesEnabledForUser",
            "baseName": "emotesEnabledForUser",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return RobloxApiAvatarModelsAvatarRulesModel.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum RobloxApiAvatarModelsAvatarRulesModelPlayerAvatarTypesEnum {
    NUMBER_1 = 1,
    NUMBER_3 = 3
}
export enum RobloxApiAvatarModelsAvatarRulesModelAccessoryRefinementTypesEnum {
    NUMBER_1 = 1,
    NUMBER_2 = 2,
    NUMBER_3 = 3,
    NUMBER_4 = 4,
    NUMBER_5 = 5,
    NUMBER_6 = 6,
    NUMBER_7 = 7,
    NUMBER_8 = 8,
    NUMBER_9 = 9,
    NUMBER_10 = 10,
    NUMBER_11 = 11,
    NUMBER_12 = 12,
    NUMBER_13 = 13,
    NUMBER_16 = 16,
    NUMBER_17 = 17,
    NUMBER_18 = 18,
    NUMBER_19 = 19,
    NUMBER_21 = 21,
    NUMBER_22 = 22,
    NUMBER_24 = 24,
    NUMBER_25 = 25,
    NUMBER_26 = 26,
    NUMBER_27 = 27,
    NUMBER_28 = 28,
    NUMBER_29 = 29,
    NUMBER_30 = 30,
    NUMBER_31 = 31,
    NUMBER_32 = 32,
    NUMBER_33 = 33,
    NUMBER_34 = 34,
    NUMBER_35 = 35,
    NUMBER_37 = 37,
    NUMBER_38 = 38,
    NUMBER_39 = 39,
    NUMBER_40 = 40,
    NUMBER_41 = 41,
    NUMBER_42 = 42,
    NUMBER_43 = 43,
    NUMBER_44 = 44,
    NUMBER_45 = 45,
    NUMBER_46 = 46,
    NUMBER_47 = 47,
    NUMBER_48 = 48,
    NUMBER_49 = 49,
    NUMBER_50 = 50,
    NUMBER_51 = 51,
    NUMBER_52 = 52,
    NUMBER_53 = 53,
    NUMBER_54 = 54,
    NUMBER_55 = 55,
    NUMBER_56 = 56,
    NUMBER_59 = 59,
    NUMBER_60 = 60,
    NUMBER_61 = 61,
    NUMBER_62 = 62,
    NUMBER_63 = 63,
    NUMBER_64 = 64,
    NUMBER_65 = 65,
    NUMBER_66 = 66,
    NUMBER_67 = 67,
    NUMBER_68 = 68,
    NUMBER_69 = 69,
    NUMBER_70 = 70,
    NUMBER_71 = 71,
    NUMBER_72 = 72,
    NUMBER_73 = 73,
    NUMBER_74 = 74,
    NUMBER_75 = 75,
    NUMBER_76 = 76,
    NUMBER_77 = 77,
    NUMBER_78 = 78,
    NUMBER_79 = 79,
    NUMBER_80 = 80,
    NUMBER_81 = 81,
    NUMBER_82 = 82
}

