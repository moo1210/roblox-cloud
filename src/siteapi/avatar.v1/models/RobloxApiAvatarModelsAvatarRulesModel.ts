/**
 * Avatar Api v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RobloxApiAvatarModelsAssetTypeRulesModel } from '../models/RobloxApiAvatarModelsAssetTypeRulesModel';
import { RobloxApiAvatarModelsAvatarRulesModelAccessoryRefinementLowerBounds } from '../models/RobloxApiAvatarModelsAvatarRulesModelAccessoryRefinementLowerBounds';
import { RobloxApiAvatarModelsBodyColorModel } from '../models/RobloxApiAvatarModelsBodyColorModel';
import { RobloxApiAvatarModelsDefaultClothingAssets } from '../models/RobloxApiAvatarModelsDefaultClothingAssets';
import { RobloxApiAvatarModelsScaleRulesModel } from '../models/RobloxApiAvatarModelsScaleRulesModel';
import { HttpFile } from '../../../common/http/http';

/**
* A model containing details about avatar-related business rules
*/
export class RobloxApiAvatarModelsAvatarRulesModel {
    /**
    * The avatar type
    */
    'playerAvatarTypes'?: Array<RobloxApiAvatarModelsAvatarRulesModelPlayerAvatarTypesEnum>;
    /**
    * The scales
    */
    'scales'?: { [key: string]: RobloxApiAvatarModelsScaleRulesModel; };
    /**
    * The assets worn on the character
    */
    'wearableAssetTypes'?: Array<RobloxApiAvatarModelsAssetTypeRulesModel>;
    /**
    * The list of asset types for Accessory Refinement.
    */
    'accessoryRefinementTypes'?: Set<RobloxApiAvatarModelsAvatarRulesModelAccessoryRefinementTypesEnum>;
    'accessoryRefinementLowerBounds'?: RobloxApiAvatarModelsAvatarRulesModelAccessoryRefinementLowerBounds;
    'accessoryRefinementUpperBounds'?: RobloxApiAvatarModelsAvatarRulesModelAccessoryRefinementLowerBounds;
    /**
    * The full set of usable body colors
    */
    'bodyColorsPalette'?: Array<RobloxApiAvatarModelsBodyColorModel>;
    /**
    * The basic set of body colors
    */
    'basicBodyColorsPalette'?: Array<RobloxApiAvatarModelsBodyColorModel>;
    /**
    * The minimum Delta-E difference in body colors  for default clothing not to be applied
    */
    'minimumDeltaEBodyColorDifference'?: number;
    /**
    * Whether proportion and bodyType scales are allowed to be set by the authenticated user
    */
    'proportionsAndBodyTypeEnabledForUser'?: boolean;
    'defaultClothingAssetLists'?: RobloxApiAvatarModelsDefaultClothingAssets;
    /**
    * Whether or not bundles are enabled for the specific user
    */
    'bundlesEnabledForUser'?: boolean;
    /**
    * Whether or not emotes are enabled
    */
    'emotesEnabledForUser'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "playerAvatarTypes",
            "baseName": "playerAvatarTypes",
            "type": "Array<RobloxApiAvatarModelsAvatarRulesModelPlayerAvatarTypesEnum>",
            "format": "int32"
        },
        {
            "name": "scales",
            "baseName": "scales",
            "type": "{ [key: string]: RobloxApiAvatarModelsScaleRulesModel; }",
            "format": ""
        },
        {
            "name": "wearableAssetTypes",
            "baseName": "wearableAssetTypes",
            "type": "Array<RobloxApiAvatarModelsAssetTypeRulesModel>",
            "format": ""
        },
        {
            "name": "accessoryRefinementTypes",
            "baseName": "accessoryRefinementTypes",
            "type": "Set<RobloxApiAvatarModelsAvatarRulesModelAccessoryRefinementTypesEnum>",
            "format": "int32"
        },
        {
            "name": "accessoryRefinementLowerBounds",
            "baseName": "accessoryRefinementLowerBounds",
            "type": "RobloxApiAvatarModelsAvatarRulesModelAccessoryRefinementLowerBounds",
            "format": ""
        },
        {
            "name": "accessoryRefinementUpperBounds",
            "baseName": "accessoryRefinementUpperBounds",
            "type": "RobloxApiAvatarModelsAvatarRulesModelAccessoryRefinementLowerBounds",
            "format": ""
        },
        {
            "name": "bodyColorsPalette",
            "baseName": "bodyColorsPalette",
            "type": "Array<RobloxApiAvatarModelsBodyColorModel>",
            "format": ""
        },
        {
            "name": "basicBodyColorsPalette",
            "baseName": "basicBodyColorsPalette",
            "type": "Array<RobloxApiAvatarModelsBodyColorModel>",
            "format": ""
        },
        {
            "name": "minimumDeltaEBodyColorDifference",
            "baseName": "minimumDeltaEBodyColorDifference",
            "type": "number",
            "format": "double"
        },
        {
            "name": "proportionsAndBodyTypeEnabledForUser",
            "baseName": "proportionsAndBodyTypeEnabledForUser",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "defaultClothingAssetLists",
            "baseName": "defaultClothingAssetLists",
            "type": "RobloxApiAvatarModelsDefaultClothingAssets",
            "format": ""
        },
        {
            "name": "bundlesEnabledForUser",
            "baseName": "bundlesEnabledForUser",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "emotesEnabledForUser",
            "baseName": "emotesEnabledForUser",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return RobloxApiAvatarModelsAvatarRulesModel.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum RobloxApiAvatarModelsAvatarRulesModelPlayerAvatarTypesEnum {
    NUMBER_1 = 1,
    NUMBER_3 = 3
}
export enum RobloxApiAvatarModelsAvatarRulesModelAccessoryRefinementTypesEnum {
    Image = 1,
    TShirt = 2,
    Audio = 3,
    Mesh = 4,
    Lua = 5,
    HTML = 6,
    Text = 7,
    Hat = 8,
    Place = 9,
    Model = 10,
    Shirt = 11,
    Pants = 12,
    Decal = 13,
    Avatar = 16,
    Head = 17,
    Face = 18,
    Gear = 19,
    Badge = 21,
    GroupEmblem = 22,
    Animation = 24,
    Arms = 25,
    Legs = 26,
    Torso = 27,
    RightArm = 28,
    LeftArm = 29,
    LeftLeg = 30,
    RightLeg = 31,
    Package = 32,
    YouTubeVideo = 33,
    GamePass = 34,
    App = 35,
    Code = 37,
    Plugin = 38,
    SolidModel = 39,
    MeshPart = 40,
    HairAccessory = 41,
    FaceAccessory = 42,
    NeckAccessory = 43,
    ShoulderAccessory = 44,
    FrontAccessory = 45,
    BackAccessory = 46,
    WaistAccessory = 47,
    ClimbAnimation = 48,
    DeathAnimation = 49,
    FallAnimation = 50,
    IdleAnimation = 51,
    JumpAnimation = 52,
    RunAnimation = 53,
    SwimAnimation = 54,
    WalkAnimation = 55,
    PoseAnimation = 56,
    LocalizationTableManifest = 59,
    LocalizationTableTranslation = 60,
    EmoteAnimation = 61,
    Video = 62,
    TexturePack = 63,
    TShirtAccessory = 64,
    ShirtAccessory = 65,
    PantsAccessory = 66,
    JacketAccessory = 67,
    SweaterAccessory = 68,
    ShortsAccessory = 69,
    LeftShoeAccessory = 70,
    RightShoeAccessory = 71,
    DressSkirtAccessory = 72,
    FontFamily = 73,
    FontFace = 74,
    MeshHiddenSurfaceRemoval = 75,
    EyebrowAccessory = 76,
    EyelashAccessory = 77,
    MoodAnimation = 78,
    DynamicHead = 79,
    CodeSnippet = 80,
    AdsVideo = 81,
    OtaUpdate = 82
}

