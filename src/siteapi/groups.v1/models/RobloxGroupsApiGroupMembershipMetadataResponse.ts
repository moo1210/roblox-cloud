/**
 * Groups Api v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RobloxGroupsApiGroupPermissionsModel } from '../models/RobloxGroupsApiGroupPermissionsModel';
import { RobloxGroupsApiUserGroupRoleResponse } from '../models/RobloxGroupsApiUserGroupRoleResponse';
import { HttpFile } from '../../../common/http/http';

/**
* A user\'s group membership metadata response model
*/
export class RobloxGroupsApiGroupMembershipMetadataResponse {
    /**
    * The group id
    */
    'groupId'?: number;
    /**
    * Whether the group is primary
    */
    'isPrimary'?: boolean;
    /**
    * Whether there has been a request to join this group
    */
    'isPendingJoin'?: boolean;
    'userRole'?: RobloxGroupsApiUserGroupRoleResponse;
    'permissions'?: RobloxGroupsApiGroupPermissionsModel;
    /**
    * Whether group games are visible
    */
    'areGroupGamesVisible'?: boolean;
    /**
    * Whether group funds are visible
    */
    'areGroupFundsVisible'?: boolean;
    /**
    * Whether enemies are allowed
    */
    'areEnemiesAllowed'?: boolean;
    /**
    * If the user can configure the group
    */
    'canConfigure'?: boolean;
    /**
    * Whether the group\'s notification preferences set to enabled for the user
    */
    'isNotificationsEnabled'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "groupId",
            "baseName": "groupId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "isPrimary",
            "baseName": "isPrimary",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isPendingJoin",
            "baseName": "isPendingJoin",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "userRole",
            "baseName": "userRole",
            "type": "RobloxGroupsApiUserGroupRoleResponse",
            "format": ""
        },
        {
            "name": "permissions",
            "baseName": "permissions",
            "type": "RobloxGroupsApiGroupPermissionsModel",
            "format": ""
        },
        {
            "name": "areGroupGamesVisible",
            "baseName": "areGroupGamesVisible",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "areGroupFundsVisible",
            "baseName": "areGroupFundsVisible",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "areEnemiesAllowed",
            "baseName": "areEnemiesAllowed",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "canConfigure",
            "baseName": "canConfigure",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isNotificationsEnabled",
            "baseName": "isNotificationsEnabled",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return RobloxGroupsApiGroupMembershipMetadataResponse.attributeTypeMap;
    }

    public constructor() {
    }
}

