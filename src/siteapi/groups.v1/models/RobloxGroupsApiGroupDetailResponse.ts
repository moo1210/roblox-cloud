/**
 * Groups Api v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RobloxGroupsApiModelsResponseUserModel } from '../models/RobloxGroupsApiModelsResponseUserModel';
import { RobloxGroupsApiShoutResponse } from '../models/RobloxGroupsApiShoutResponse';
import { HttpFile } from '../../../common/http/http';

/**
* A detailed group response model
*/
export class RobloxGroupsApiGroupDetailResponse {
    /**
    * The group id
    */
    'id'?: number;
    /**
    * The group name
    */
    'name'?: string;
    /**
    * The group description
    */
    'description'?: string;
    'owner'?: RobloxGroupsApiModelsResponseUserModel;
    'shout'?: RobloxGroupsApiShoutResponse;
    /**
    * The number of members in the group
    */
    'memberCount'?: number;
    /**
    * Whether the group is Builders Club only
    */
    'isBuildersClubOnly'?: boolean;
    /**
    * Whether the group is public (no approval required)
    */
    'publicEntryAllowed'?: boolean;
    /**
    * Whether the group is locked
    */
    'isLocked'?: boolean;
    /**
    * Whether the group has a verified badge.
    */
    'hasVerifiedBadge'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "owner",
            "baseName": "owner",
            "type": "RobloxGroupsApiModelsResponseUserModel",
            "format": ""
        },
        {
            "name": "shout",
            "baseName": "shout",
            "type": "RobloxGroupsApiShoutResponse",
            "format": ""
        },
        {
            "name": "memberCount",
            "baseName": "memberCount",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "isBuildersClubOnly",
            "baseName": "isBuildersClubOnly",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "publicEntryAllowed",
            "baseName": "publicEntryAllowed",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isLocked",
            "baseName": "isLocked",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "hasVerifiedBadge",
            "baseName": "hasVerifiedBadge",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return RobloxGroupsApiGroupDetailResponse.attributeTypeMap;
    }

    public constructor() {
    }
}

