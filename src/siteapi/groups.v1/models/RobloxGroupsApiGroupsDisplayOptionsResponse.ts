/**
 * Groups Api v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../../../common/http/http';

/**
* A group roles response model
*/
export class RobloxGroupsApiGroupsDisplayOptionsResponse {
    /**
    * The user\'s builders club membership group limit
    */
    'groupLimit'?: number;
    /**
    * The user\'s current group membership count
    */
    'currentGroupCount'?: number;
    /**
    * The maximum length of a group status
    */
    'groupStatusMaxLength'?: number;
    /**
    * The maximum length of a group wall post
    */
    'groupPostMaxLength'?: number;
    /**
    * If set to true, group details will subscribe and respond to wall notifications.
    */
    'isGroupWallNotificationsEnabled'?: boolean;
    /**
    * Time in milliseconds between calls to subscribe to group wall notifications.
    */
    'groupWallNotificationsSubscribeIntervalInMilliseconds'?: number;
    /**
    * If set to true, groups showcase will not show on users profiles.                If set to false, group showcase will display on users profiles.
    */
    'areProfileGroupsHidden'?: boolean;
    /**
    * If set to true, group details will respect GUAC policies for group details                If set to false, group details will not respect GUAC policies
    */
    'isGroupDetailsPolicyEnabled'?: boolean;
    /**
    * Whether or not we should show previous names of this group
    */
    'showPreviousGroupNames'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "groupLimit",
            "baseName": "groupLimit",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "currentGroupCount",
            "baseName": "currentGroupCount",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "groupStatusMaxLength",
            "baseName": "groupStatusMaxLength",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "groupPostMaxLength",
            "baseName": "groupPostMaxLength",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "isGroupWallNotificationsEnabled",
            "baseName": "isGroupWallNotificationsEnabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "groupWallNotificationsSubscribeIntervalInMilliseconds",
            "baseName": "groupWallNotificationsSubscribeIntervalInMilliseconds",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "areProfileGroupsHidden",
            "baseName": "areProfileGroupsHidden",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isGroupDetailsPolicyEnabled",
            "baseName": "isGroupDetailsPolicyEnabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "showPreviousGroupNames",
            "baseName": "showPreviousGroupNames",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return RobloxGroupsApiGroupsDisplayOptionsResponse.attributeTypeMap;
    }

    public constructor() {
    }
}

