/**
 * Economy Api v2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RobloxEconomyApiModelsCreatorDetails } from '../models/RobloxEconomyApiModelsCreatorDetails';
import { HttpFile } from '../../../common/http/http';

export class RobloxEconomyApiModelsItemDetailResponse {
    /**
    * The target Id
    */
    'targetId'?: number;
    /**
    * The type of product requested
    */
    'productType'?: string;
    /**
    * The asset Id
    */
    'assetId'?: number;
    /**
    * The product Id
    */
    'productId'?: number;
    /**
    * Name of the asset
    */
    'name'?: string;
    /**
    * Description of the asset
    */
    'description'?: string;
    /**
    * The assetType Id
    */
    'assetTypeId'?: number;
    'creator'?: RobloxEconomyApiModelsCreatorDetails;
    /**
    * Icon Image Asset Id
    */
    'iconImageAssetId'?: number;
    /**
    * Created Datetime
    */
    'created'?: Date;
    /**
    * Updated Datetime
    */
    'updated'?: Date;
    /**
    * Nullable Price in Robux
    */
    'priceInRobux'?: number;
    /**
    * Nullable Premium price in Robux
    */
    'premiumPriceInRobux'?: number;
    /**
    * Nullable Price in Tickets
    */
    'priceInTickets'?: number;
    /**
    * Num of Sales
    */
    'sales'?: number;
    /**
    * Is New ?
    */
    'isNew'?: boolean;
    /**
    * Is For Sale ?
    */
    'isForSale'?: boolean;
    /**
    * Is Public Domain ?
    */
    'isPublicDomain'?: boolean;
    /**
    * Is Limited ?
    */
    'isLimited'?: boolean;
    /**
    * Is Limited Unique
    */
    'isLimitedUnique'?: boolean;
    /**
    * Nullable Num of Remainning
    */
    'remaining'?: number;
    /**
    * Minimum membership level needed
    */
    'minimumMembershipLevel'?: number;
    /**
    * Content Rating Type Id
    */
    'contentRatingTypeId'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "targetId",
            "baseName": "TargetId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "productType",
            "baseName": "ProductType",
            "type": "string",
            "format": ""
        },
        {
            "name": "assetId",
            "baseName": "AssetId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "productId",
            "baseName": "ProductId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "name",
            "baseName": "Name",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "Description",
            "type": "string",
            "format": ""
        },
        {
            "name": "assetTypeId",
            "baseName": "AssetTypeId",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "creator",
            "baseName": "Creator",
            "type": "RobloxEconomyApiModelsCreatorDetails",
            "format": ""
        },
        {
            "name": "iconImageAssetId",
            "baseName": "IconImageAssetId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "created",
            "baseName": "Created",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "updated",
            "baseName": "Updated",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "priceInRobux",
            "baseName": "PriceInRobux",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "premiumPriceInRobux",
            "baseName": "PremiumPriceInRobux",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "priceInTickets",
            "baseName": "PriceInTickets",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "sales",
            "baseName": "Sales",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "isNew",
            "baseName": "IsNew",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isForSale",
            "baseName": "IsForSale",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isPublicDomain",
            "baseName": "IsPublicDomain",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isLimited",
            "baseName": "IsLimited",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isLimitedUnique",
            "baseName": "IsLimitedUnique",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "remaining",
            "baseName": "Remaining",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "minimumMembershipLevel",
            "baseName": "MinimumMembershipLevel",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "contentRatingTypeId",
            "baseName": "ContentRatingTypeId",
            "type": "number",
            "format": "int32"
        }    ];

    static getAttributeTypeMap() {
        return RobloxEconomyApiModelsItemDetailResponse.attributeTypeMap;
    }

    public constructor() {
    }
}

