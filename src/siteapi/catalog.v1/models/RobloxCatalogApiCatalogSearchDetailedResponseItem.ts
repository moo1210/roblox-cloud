/**
 * Catalog Api v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RobloxCatalogApiBundleItemDetailModel } from '../models/RobloxCatalogApiBundleItemDetailModel';
import { RobloxCatalogApiPremiumPricingModel } from '../models/RobloxCatalogApiPremiumPricingModel';
import { HttpFile } from '../../../common/http/http';

/**
* The detailed model for catalog items.
*/
export class RobloxCatalogApiCatalogSearchDetailedResponseItem {
    /**
    * The Item Id.
    */
    'id'?: number;
    /**
    * The Roblox.Catalog.Api.CatalogSearchDetailedResponseItem.ItemType item type. [\'Asset\' = 1, \'Bundle\' = 2]
    */
    'itemType'?: RobloxCatalogApiCatalogSearchDetailedResponseItemItemTypeEnum;
    /**
    * The Roblox.Platform.Assets.AssetType serialized if item is an asset.
    */
    'assetType'?: RobloxCatalogApiCatalogSearchDetailedResponseItemAssetTypeEnum;
    /**
    * The Roblox.Platform.Bundles.Core.BundleType serialized if item is a bundle.
    */
    'bundleType'?: RobloxCatalogApiCatalogSearchDetailedResponseItemBundleTypeEnum;
    /**
    * The item name.
    */
    'name'?: string;
    /**
    * The item description.
    */
    'description'?: string;
    /**
    * The product id of corresponding item.
    */
    'productId'?: number;
    /**
    * The System.Collections.Generic.IEnumerable`1, serialized if item has genres.
    */
    'genres'?: Array<RobloxCatalogApiCatalogSearchDetailedResponseItemGenresEnum>;
    /**
    * The System.Collections.Generic.IEnumerable`1 contained in the bundle, serialized if item is a bundle.
    */
    'bundledItems'?: Array<RobloxCatalogApiBundleItemDetailModel>;
    /**
    * The System.Collections.Generic.IEnumerable`1 if item has Roblox.Catalog.Api.CatalogItemStatus.
    */
    'itemStatus'?: Array<RobloxCatalogApiCatalogSearchDetailedResponseItemItemStatusEnum>;
    /**
    * The System.Collections.Generic.IEnumerable`1 if item has Roblox.Catalog.Api.CatalogItemRestriction.
    */
    'itemRestrictions'?: Array<RobloxCatalogApiCatalogSearchDetailedResponseItemItemRestrictionsEnum>;
    /**
    * The verified status of a creator
    */
    'creatorHasVerifiedBadge'?: boolean;
    /**
    * The Roblox.Catalog.Api.CatalogSearchDetailedResponseItem.CreatorType of the item\'s creator.
    */
    'creatorType'?: RobloxCatalogApiCatalogSearchDetailedResponseItemCreatorTypeEnum;
    /**
    * The creator id of the item\'s creator.
    */
    'creatorTargetId'?: number;
    /**
    * The creator name of the item\'s creator.
    */
    'creatorName'?: string;
    /**
    * The item\'s price.
    */
    'price'?: number;
    'premiumPricing'?: RobloxCatalogApiPremiumPricingModel;
    /**
    * The item\'s lowest price, only if the item is resellable and there are resellers.
    */
    'lowestPrice'?: number;
    /**
    * The item\'s lowest resale price, only if the item is resellable and there are resellers, including current user.
    */
    'lowestResalePrice'?: number;
    /**
    * The localized string item status if the item\'s price should not be displayed.
    */
    'priceStatus'?: string;
    /**
    * The number of items in stock, only if the item is resellable and is limitedEdition
    */
    'unitsAvailableForConsumption'?: number;
    /**
    * The number of times the item has been purchased.
    */
    'purchaseCount'?: number;
    /**
    * The number of times the item has been favorited.
    */
    'favoriteCount'?: number;
    /**
    * When the item will go off sale, if the item has an off deadline.
    */
    'offSaleDeadline'?: Date;
    /**
    * The item\'s collectible item id.   It is an UUID if a item is collectible type. Otherwise, it is null.
    */
    'collectibleItemId'?: string;
    /**
    * The collectible or limited-unique item\'s total quantity of unique instances.
    */
    'totalQuantity'?: number;
    /**
    * The sale location type of the item. [\'NotApplicable\' = 0, \'ShopOnly\' = 1, \'MyExperiencesOnly\' = 2, \'ShopAndMyExperiences\' = 3, \'ExperiencesById\' = 4, \'ShopAndAllExperiences\' = 5, \'ExperiencesDevApiOnly\' = 6, \'ShopAndExperiencesById\' = 7]
    */
    'saleLocationType'?: RobloxCatalogApiCatalogSearchDetailedResponseItemSaleLocationTypeEnum;
    /**
    * An indicator if the item has resellers or not (null if not resellable).
    */
    'hasResellers'?: boolean;
    /**
    * An indicator if the item is off sale or not.
    */
    'isOffSale'?: boolean;
    /**
    * Quantity limit for how many instances a user can buy.
    */
    'quantityLimitPerUser'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "itemType",
            "baseName": "itemType",
            "type": "RobloxCatalogApiCatalogSearchDetailedResponseItemItemTypeEnum",
            "format": "int32"
        },
        {
            "name": "assetType",
            "baseName": "assetType",
            "type": "RobloxCatalogApiCatalogSearchDetailedResponseItemAssetTypeEnum",
            "format": "int32"
        },
        {
            "name": "bundleType",
            "baseName": "bundleType",
            "type": "RobloxCatalogApiCatalogSearchDetailedResponseItemBundleTypeEnum",
            "format": "int32"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "productId",
            "baseName": "productId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "genres",
            "baseName": "genres",
            "type": "Array<RobloxCatalogApiCatalogSearchDetailedResponseItemGenresEnum>",
            "format": "int32"
        },
        {
            "name": "bundledItems",
            "baseName": "bundledItems",
            "type": "Array<RobloxCatalogApiBundleItemDetailModel>",
            "format": ""
        },
        {
            "name": "itemStatus",
            "baseName": "itemStatus",
            "type": "Array<RobloxCatalogApiCatalogSearchDetailedResponseItemItemStatusEnum>",
            "format": "int32"
        },
        {
            "name": "itemRestrictions",
            "baseName": "itemRestrictions",
            "type": "Array<RobloxCatalogApiCatalogSearchDetailedResponseItemItemRestrictionsEnum>",
            "format": "int32"
        },
        {
            "name": "creatorHasVerifiedBadge",
            "baseName": "creatorHasVerifiedBadge",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "creatorType",
            "baseName": "creatorType",
            "type": "RobloxCatalogApiCatalogSearchDetailedResponseItemCreatorTypeEnum",
            "format": "int32"
        },
        {
            "name": "creatorTargetId",
            "baseName": "creatorTargetId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "creatorName",
            "baseName": "creatorName",
            "type": "string",
            "format": ""
        },
        {
            "name": "price",
            "baseName": "price",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "premiumPricing",
            "baseName": "premiumPricing",
            "type": "RobloxCatalogApiPremiumPricingModel",
            "format": ""
        },
        {
            "name": "lowestPrice",
            "baseName": "lowestPrice",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "lowestResalePrice",
            "baseName": "lowestResalePrice",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "priceStatus",
            "baseName": "priceStatus",
            "type": "string",
            "format": ""
        },
        {
            "name": "unitsAvailableForConsumption",
            "baseName": "unitsAvailableForConsumption",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "purchaseCount",
            "baseName": "purchaseCount",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "favoriteCount",
            "baseName": "favoriteCount",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "offSaleDeadline",
            "baseName": "offSaleDeadline",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "collectibleItemId",
            "baseName": "collectibleItemId",
            "type": "string",
            "format": ""
        },
        {
            "name": "totalQuantity",
            "baseName": "totalQuantity",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "saleLocationType",
            "baseName": "saleLocationType",
            "type": "RobloxCatalogApiCatalogSearchDetailedResponseItemSaleLocationTypeEnum",
            "format": "int32"
        },
        {
            "name": "hasResellers",
            "baseName": "hasResellers",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isOffSale",
            "baseName": "isOffSale",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "quantityLimitPerUser",
            "baseName": "quantityLimitPerUser",
            "type": "number",
            "format": "int32"
        }    ];

    static getAttributeTypeMap() {
        return RobloxCatalogApiCatalogSearchDetailedResponseItem.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum RobloxCatalogApiCatalogSearchDetailedResponseItemItemTypeEnum {
    NUMBER_1 = 1,
    NUMBER_2 = 2
}
export enum RobloxCatalogApiCatalogSearchDetailedResponseItemAssetTypeEnum {
    NUMBER_1 = 1,
    NUMBER_2 = 2,
    NUMBER_3 = 3,
    NUMBER_4 = 4,
    NUMBER_5 = 5,
    NUMBER_6 = 6,
    NUMBER_7 = 7,
    NUMBER_8 = 8,
    NUMBER_9 = 9,
    NUMBER_10 = 10,
    NUMBER_11 = 11,
    NUMBER_12 = 12,
    NUMBER_13 = 13,
    NUMBER_16 = 16,
    NUMBER_17 = 17,
    NUMBER_18 = 18,
    NUMBER_19 = 19,
    NUMBER_21 = 21,
    NUMBER_22 = 22,
    NUMBER_24 = 24,
    NUMBER_25 = 25,
    NUMBER_26 = 26,
    NUMBER_27 = 27,
    NUMBER_28 = 28,
    NUMBER_29 = 29,
    NUMBER_30 = 30,
    NUMBER_31 = 31,
    NUMBER_32 = 32,
    NUMBER_33 = 33,
    NUMBER_34 = 34,
    NUMBER_35 = 35,
    NUMBER_37 = 37,
    NUMBER_38 = 38,
    NUMBER_39 = 39,
    NUMBER_40 = 40,
    NUMBER_41 = 41,
    NUMBER_42 = 42,
    NUMBER_43 = 43,
    NUMBER_44 = 44,
    NUMBER_45 = 45,
    NUMBER_46 = 46,
    NUMBER_47 = 47,
    NUMBER_48 = 48,
    NUMBER_49 = 49,
    NUMBER_50 = 50,
    NUMBER_51 = 51,
    NUMBER_52 = 52,
    NUMBER_53 = 53,
    NUMBER_54 = 54,
    NUMBER_55 = 55,
    NUMBER_56 = 56,
    NUMBER_59 = 59,
    NUMBER_60 = 60,
    NUMBER_61 = 61,
    NUMBER_62 = 62,
    NUMBER_63 = 63,
    NUMBER_64 = 64,
    NUMBER_65 = 65,
    NUMBER_66 = 66,
    NUMBER_67 = 67,
    NUMBER_68 = 68,
    NUMBER_69 = 69,
    NUMBER_70 = 70,
    NUMBER_71 = 71,
    NUMBER_72 = 72,
    NUMBER_73 = 73,
    NUMBER_74 = 74,
    NUMBER_75 = 75,
    NUMBER_76 = 76,
    NUMBER_77 = 77,
    NUMBER_78 = 78,
    NUMBER_79 = 79,
    NUMBER_80 = 80,
    NUMBER_81 = 81,
    NUMBER_82 = 82
}
export enum RobloxCatalogApiCatalogSearchDetailedResponseItemBundleTypeEnum {
    NUMBER_1 = 1,
    NUMBER_2 = 2,
    NUMBER_3 = 3,
    NUMBER_4 = 4
}
export enum RobloxCatalogApiCatalogSearchDetailedResponseItemGenresEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1,
    NUMBER_2 = 2,
    NUMBER_3 = 3,
    NUMBER_4 = 4,
    NUMBER_5 = 5,
    NUMBER_6 = 6,
    NUMBER_7 = 7,
    NUMBER_8 = 8,
    NUMBER_9 = 9,
    NUMBER_10 = 10,
    NUMBER_11 = 11,
    NUMBER_12 = 12,
    NUMBER_13 = 13,
    NUMBER_14 = 14
}
export enum RobloxCatalogApiCatalogSearchDetailedResponseItemItemStatusEnum {
    NUMBER_1 = 1,
    NUMBER_2 = 2,
    NUMBER_7 = 7
}
export enum RobloxCatalogApiCatalogSearchDetailedResponseItemItemRestrictionsEnum {
    NUMBER_1 = 1,
    NUMBER_2 = 2,
    NUMBER_3 = 3,
    NUMBER_4 = 4,
    NUMBER_5 = 5,
    NUMBER_6 = 6,
    NUMBER_7 = 7,
    NUMBER_8 = 8,
    NUMBER_9 = 9
}
export enum RobloxCatalogApiCatalogSearchDetailedResponseItemCreatorTypeEnum {
    NUMBER_1 = 1,
    NUMBER_2 = 2
}
export enum RobloxCatalogApiCatalogSearchDetailedResponseItemSaleLocationTypeEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1,
    NUMBER_2 = 2,
    NUMBER_3 = 3,
    NUMBER_4 = 4,
    NUMBER_5 = 5,
    NUMBER_6 = 6,
    NUMBER_7 = 7
}

