/**
 * Games Api v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RobloxGamesApiModelsResponseGameCreator } from '../models/RobloxGamesApiModelsResponseGameCreator';
import { HttpFile } from '../../../common/http/http';

/**
* Response model for getting the game detail
*/
export class RobloxGamesApiModelsResponseGameDetailResponse {
    /**
    * The game universe id
    */
    'id'?: number;
    /**
    * The game root place id
    */
    'rootPlaceId'?: number;
    /**
    * The game name
    */
    'name'?: string;
    /**
    * The game description
    */
    'description'?: string;
    /**
    * The game name in the source language, if different from the returned name.
    */
    'sourceName'?: string;
    /**
    * The game description in the source language, if different from the returned description.
    */
    'sourceDescription'?: string;
    'creator'?: RobloxGamesApiModelsResponseGameCreator;
    /**
    * The game paid access price
    */
    'price'?: number;
    /**
    * The game allowed gear genres
    */
    'allowedGearGenres'?: Array<string>;
    /**
    * The game allowed gear categoris
    */
    'allowedGearCategories'?: Array<string>;
    /**
    * The game allows place to be copied
    */
    'isGenreEnforced'?: boolean;
    /**
    * The game allows place to be copied
    */
    'copyingAllowed'?: boolean;
    /**
    * Current player count of the game
    */
    'playing'?: number;
    /**
    * The total visits to the game
    */
    'visits'?: number;
    /**
    * The game max players
    */
    'maxPlayers'?: number;
    /**
    * The game created time
    */
    'created'?: Date;
    /**
    * The game updated time
    */
    'updated'?: Date;
    /**
    * The setting of IsStudioAccessToApisAllowed of the universe
    */
    'studioAccessToApisAllowed'?: boolean;
    /**
    * Gets or sets the flag to indicate whether the create vip servers button should be allowed in game details page
    */
    'createVipServersAllowed'?: boolean;
    /**
    * Avatar type. Possible values are MorphToR6, MorphToR15, and PlayerChoice [\'MorphToR6\' = 1, \'PlayerChoice\' = 2, \'MorphToR15\' = 3]
    */
    'universeAvatarType'?: RobloxGamesApiModelsResponseGameDetailResponseUniverseAvatarTypeEnum;
    /**
    * The game genre display name
    */
    'genre'?: string;
    /**
    * Is this game all genre.
    */
    'isAllGenre'?: boolean;
    /**
    * Is this game favorited by user.
    */
    'isFavoritedByUser'?: boolean;
    /**
    * Game number of favorites.
    */
    'favoritedCount'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "rootPlaceId",
            "baseName": "rootPlaceId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "sourceName",
            "baseName": "sourceName",
            "type": "string",
            "format": ""
        },
        {
            "name": "sourceDescription",
            "baseName": "sourceDescription",
            "type": "string",
            "format": ""
        },
        {
            "name": "creator",
            "baseName": "creator",
            "type": "RobloxGamesApiModelsResponseGameCreator",
            "format": ""
        },
        {
            "name": "price",
            "baseName": "price",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "allowedGearGenres",
            "baseName": "allowedGearGenres",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "allowedGearCategories",
            "baseName": "allowedGearCategories",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "isGenreEnforced",
            "baseName": "isGenreEnforced",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "copyingAllowed",
            "baseName": "copyingAllowed",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "playing",
            "baseName": "playing",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "visits",
            "baseName": "visits",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "maxPlayers",
            "baseName": "maxPlayers",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "updated",
            "baseName": "updated",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "studioAccessToApisAllowed",
            "baseName": "studioAccessToApisAllowed",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "createVipServersAllowed",
            "baseName": "createVipServersAllowed",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "universeAvatarType",
            "baseName": "universeAvatarType",
            "type": "RobloxGamesApiModelsResponseGameDetailResponseUniverseAvatarTypeEnum",
            "format": "int32"
        },
        {
            "name": "genre",
            "baseName": "genre",
            "type": "string",
            "format": ""
        },
        {
            "name": "isAllGenre",
            "baseName": "isAllGenre",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isFavoritedByUser",
            "baseName": "isFavoritedByUser",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "favoritedCount",
            "baseName": "favoritedCount",
            "type": "number",
            "format": "int64"
        }    ];

    static getAttributeTypeMap() {
        return RobloxGamesApiModelsResponseGameDetailResponse.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum RobloxGamesApiModelsResponseGameDetailResponseUniverseAvatarTypeEnum {
    NUMBER_1 = 1,
    NUMBER_2 = 2,
    NUMBER_3 = 3
}

