/**
 * Games Api v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RobloxGamesApiModelsResponseElasticSearchDebugInfoModel } from '../models/RobloxGamesApiModelsResponseElasticSearchDebugInfoModel';
import { RobloxGamesApiModelsResponseGameResponseModel } from '../models/RobloxGamesApiModelsResponseGameResponseModel';
import { HttpFile } from '../../../common/http/http';

/**
* Response model for games search
*/
export class RobloxGamesApiModelsResponseGamesSearchResponse {
    /**
    * Games
    */
    'games'?: Array<RobloxGamesApiModelsResponseGameResponseModel>;
    /**
    * SuggestedKeyword
    */
    'suggestedKeyword'?: string;
    /**
    * CorrectedKeyword
    */
    'correctedKeyword'?: string;
    /**
    * FilteredKeyword
    */
    'filteredKeyword'?: string;
    /**
    * HasMoreRows
    */
    'hasMoreRows'?: boolean;
    /**
    * NextPageExclusiveStartId
    */
    'nextPageExclusiveStartId'?: number;
    /**
    * FeaturedSearch UniverseId if featured search is triggered, otherwise null
    */
    'featuredSearchUniverseId'?: number;
    /**
    * True if we\'ll do the emphasis treatment for the first returned universe, false if this is a broad query  Null if this is not an initial search request
    */
    'emphasis'?: boolean;
    /**
    * Cutoff index if q2d stats is applied, otherwise null
    */
    'cutOffIndex'?: number;
    /**
    * Algorithm used for game search (Elastic Search field, used for sending events in clients)
    */
    'algorithm'?: string;
    /**
    * Query type for game search (Elastic search field,  used for sending events in clients)
    */
    'algorithmQueryType'?: string;
    /**
    * Algorithm used for game search suggestion (used for sending events in clients)
    */
    'suggestionAlgorithm'?: string;
    /**
    * Related Games
    */
    'relatedGames'?: Array<RobloxGamesApiModelsResponseGameResponseModel>;
    'esDebugInfo'?: RobloxGamesApiModelsResponseElasticSearchDebugInfoModel;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "games",
            "baseName": "games",
            "type": "Array<RobloxGamesApiModelsResponseGameResponseModel>",
            "format": ""
        },
        {
            "name": "suggestedKeyword",
            "baseName": "suggestedKeyword",
            "type": "string",
            "format": ""
        },
        {
            "name": "correctedKeyword",
            "baseName": "correctedKeyword",
            "type": "string",
            "format": ""
        },
        {
            "name": "filteredKeyword",
            "baseName": "filteredKeyword",
            "type": "string",
            "format": ""
        },
        {
            "name": "hasMoreRows",
            "baseName": "hasMoreRows",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "nextPageExclusiveStartId",
            "baseName": "nextPageExclusiveStartId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "featuredSearchUniverseId",
            "baseName": "featuredSearchUniverseId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "emphasis",
            "baseName": "emphasis",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "cutOffIndex",
            "baseName": "cutOffIndex",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "algorithm",
            "baseName": "algorithm",
            "type": "string",
            "format": ""
        },
        {
            "name": "algorithmQueryType",
            "baseName": "algorithmQueryType",
            "type": "string",
            "format": ""
        },
        {
            "name": "suggestionAlgorithm",
            "baseName": "suggestionAlgorithm",
            "type": "string",
            "format": ""
        },
        {
            "name": "relatedGames",
            "baseName": "relatedGames",
            "type": "Array<RobloxGamesApiModelsResponseGameResponseModel>",
            "format": ""
        },
        {
            "name": "esDebugInfo",
            "baseName": "esDebugInfo",
            "type": "RobloxGamesApiModelsResponseElasticSearchDebugInfoModel",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return RobloxGamesApiModelsResponseGamesSearchResponse.attributeTypeMap;
    }

    public constructor() {
    }
}

