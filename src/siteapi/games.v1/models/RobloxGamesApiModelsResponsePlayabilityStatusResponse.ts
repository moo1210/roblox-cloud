/**
 * Games Api v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../../../common/http/http';

/**
* Response model for getting a universe\'s playability status for a user
*/
export class RobloxGamesApiModelsResponsePlayabilityStatusResponse {
    /**
    * The actual playability status of the universe including the reason if unplayable [\'UnplayableOtherReason\' = 0, \'Playable\' = 1, \'GuestProhibited\' = 2, \'GameUnapproved\' = 3, \'IncorrectConfiguration\' = 4, \'UniverseRootPlaceIsPrivate\' = 5, \'InsufficientPermissionFriendsOnly\' = 6, \'InsufficientPermissionGroupOnly\' = 7, \'DeviceRestricted\' = 8, \'UnderReview\' = 9, \'PurchaseRequired\' = 10, \'AccountRestricted\' = 11, \'TemporarilyUnavailable\' = 12, \'PlaceHasNoPublishedVersion\' = 13, \'ComplianceBlocked\' = 14, \'ContextualPlayabilityRegionalAvailability\' = 15, \'ContextualPlayabilityRegionalCompliance\' = 16, \'ContextualPlayabilityAgeRecommendationParentalControls\' = 17, \'ContextualPlayabilityAgeGated\' = 18, \'ContextualPlayabilityUnverifiedSeventeenPlusUser\' = 19]
    */
    'playabilityStatus'?: RobloxGamesApiModelsResponsePlayabilityStatusResponsePlayabilityStatusEnum;
    /**
    * Whether or not the universe is playable for the user
    */
    'isPlayable'?: boolean;
    /**
    * The universeId of the requested universe to help with batching requests
    */
    'universeId'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "playabilityStatus",
            "baseName": "playabilityStatus",
            "type": "RobloxGamesApiModelsResponsePlayabilityStatusResponsePlayabilityStatusEnum",
            "format": "int32"
        },
        {
            "name": "isPlayable",
            "baseName": "isPlayable",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "universeId",
            "baseName": "universeId",
            "type": "number",
            "format": "int64"
        }    ];

    static getAttributeTypeMap() {
        return RobloxGamesApiModelsResponsePlayabilityStatusResponse.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum RobloxGamesApiModelsResponsePlayabilityStatusResponsePlayabilityStatusEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1,
    NUMBER_2 = 2,
    NUMBER_3 = 3,
    NUMBER_4 = 4,
    NUMBER_5 = 5,
    NUMBER_6 = 6,
    NUMBER_7 = 7,
    NUMBER_8 = 8,
    NUMBER_9 = 9,
    NUMBER_10 = 10,
    NUMBER_11 = 11,
    NUMBER_12 = 12,
    NUMBER_13 = 13,
    NUMBER_14 = 14,
    NUMBER_15 = 15,
    NUMBER_16 = 16,
    NUMBER_17 = 17,
    NUMBER_18 = 18,
    NUMBER_19 = 19
}

