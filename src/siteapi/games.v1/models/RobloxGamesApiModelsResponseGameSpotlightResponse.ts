/**
 * Games Api v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RobloxGamesApiModelsResponseGameResponseModel } from '../models/RobloxGamesApiModelsResponseGameResponseModel';
import { HttpFile } from '../../../common/http/http';

/**
* Response model for a spotlight game.
*/
export class RobloxGamesApiModelsResponseGameSpotlightResponse {
    /**
    * The spotlight game type; reason the game has been spotlighted.
    */
    'spotlightType'?: string;
    /**
    * Localized text to display on the client for this spotlight game (call to action).
    */
    'spotlightActionText'?: string;
    /**
    * Parent class to derive custom data for each spotlight type.
    */
    'spotlightTypeData'?: any;
    'gameInfo'?: RobloxGamesApiModelsResponseGameResponseModel;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "spotlightType",
            "baseName": "spotlightType",
            "type": "string",
            "format": ""
        },
        {
            "name": "spotlightActionText",
            "baseName": "spotlightActionText",
            "type": "string",
            "format": ""
        },
        {
            "name": "spotlightTypeData",
            "baseName": "spotlightTypeData",
            "type": "any",
            "format": ""
        },
        {
            "name": "gameInfo",
            "baseName": "gameInfo",
            "type": "RobloxGamesApiModelsResponseGameResponseModel",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return RobloxGamesApiModelsResponseGameSpotlightResponse.attributeTypeMap;
    }

    public constructor() {
    }
}

