{
  "swagger": "2.0",
  "info": {
    "title": "Groups Api v2",
    "version": "v2"
  },
  "host": "groups.roblox.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/v2/groups": {
      "get": {
        "tags": [
          "GroupsV2"
        ],
        "summary": "Multi-get groups information by Ids.",
        "description": "If a group comes back as null, it will not be returned in the response.",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "groupIds",
            "description": "The group Ids.",
            "required": true,
            "type": "array",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Web.Responses.Groups.GroupResponseV2]"
            }
          },
          "400": {
            "description": "2: Too many ids in request.\r\n3: Ids could not be parsed from request."
          }
        },
        "properties": {
          "internal": false,
          "metricIds": [
            "GroupsV2:GetGroups"
          ]
        }
      }
    },
    "/v2/groups/{groupId}/wall/posts": {
      "get": {
        "tags": [
          "WallV2"
        ],
        "summary": "Gets a list of group wall posts.",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "description": "The group id.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The number of results per request.",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "enum": [
              10,
              25,
              50,
              100
            ]
          },
          {
            "in": "query",
            "name": "cursor",
            "description": "The paging cursor for the previous or next page.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "description": "Sorted by group wall post Id",
            "type": "string",
            "default": "Asc",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiPageResponse[Roblox.Groups.Api.GroupWallPostV2Model]"
            }
          },
          "400": {
            "description": "1: The group is invalid or does not exist."
          },
          "403": {
            "description": "2: You do not have permission to access this group wall."
          }
        },
        "properties": {
          "internal": false,
          "metricIds": [
            "WallV2:GetGroupWallPosts"
          ]
        }
      },
      "post": {
        "tags": [
          "WallV2"
        ],
        "summary": "Creates a post on a group wall",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "description": "The group id.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "request",
            "description": "The Roblox.Groups.Api.CreateWallPostRequest.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Roblox.Groups.Api.CreateWallPostRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Groups.Api.GroupWallPostV2Model"
            }
          },
          "400": {
            "description": "1: The group is invalid or does not exist.\r\n5: Your post was empty, white space, or more than 500 characters."
          },
          "401": {
            "description": "0: Authorization has been denied for this request."
          },
          "403": {
            "description": "0: Token Validation Failed\r\n2: You do not have permission to access this group wall."
          },
          "429": {
            "description": "4: You are posting too fast, please try again in a few minutes."
          }
        },
        "properties": {
          "internal": false,
          "metricIds": [
            "WallV2:CreateGroupWallPosts"
          ]
        }
      }
    },
    "/v2/users/{userId}/groups/roles": {
      "get": {
        "tags": [
          "GroupsV2"
        ],
        "summary": "Gets a list of all group roles for groups the specified user is in.",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user id.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "includeLocked",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeNotificationPreferences",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Groups.Api.GroupMembershipResponse]"
            }
          },
          "400": {
            "description": "3: The user is invalid or does not exist."
          }
        },
        "properties": {
          "internal": false,
          "metricIds": [
            "GroupsV2:GetGroupMemberships"
          ]
        }
      }
    }
  },
  "definitions": {
    "Roblox.Groups.Api.CreateWallPostRequest": {
      "description": "A request model for creating a group wall post",
      "type": "object",
      "properties": {
        "body": {
          "description": "The wall post body",
          "type": "string"
        },
        "captchaId": {
          "type": "string"
        },
        "captchaToken": {
          "type": "string"
        },
        "captchaProvider": {
          "type": "string"
        },
        "challengeId": {
          "type": "string"
        }
      }
    },
    "Roblox.Groups.Api.GroupMembershipResponse": {
      "description": "A basic group membership response model",
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/Roblox.Web.Responses.Groups.GroupBasicResponse"
        },
        "role": {
          "$ref": "#/definitions/Roblox.Web.Responses.Groups.GroupRoleBasicResponse"
        },
        "isNotificationsEnabled": {
          "description": "Whether the group notification preferences are enabled for the user",
          "type": "boolean"
        }
      }
    },
    "Roblox.Groups.Api.GroupRoleResponse": {
      "description": "A group role response model",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The role id",
          "type": "integer"
        },
        "name": {
          "description": "The role name",
          "type": "string"
        },
        "description": {
          "description": "The role description",
          "type": "string"
        },
        "rank": {
          "format": "int32",
          "description": "The role rank",
          "type": "integer"
        },
        "memberCount": {
          "format": "int64",
          "description": "The number of members in the role.",
          "type": "integer"
        }
      }
    },
    "Roblox.Groups.Api.GroupWallPostV2Model": {
      "description": "A response model for group wall post information",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The group wall post Id.",
          "type": "integer"
        },
        "poster": {
          "$ref": "#/definitions/Roblox.Groups.Api.UserGroupRoleResponse"
        },
        "body": {
          "description": "The group wall post body.",
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "description": "When the group wall post was posted.",
          "type": "string"
        },
        "updated": {
          "format": "date-time",
          "description": "When the group wall post was last updated.",
          "type": "string"
        }
      }
    },
    "Roblox.Groups.Api.Models.Response.UserModel": {
      "description": "A model representing data about an Roblox.Platform.Membership.IUser",
      "type": "object",
      "properties": {
        "buildersClubMembershipType": {
          "format": "int32",
          "description": "The user's builders club membership type",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "hasVerifiedBadge": {
          "description": "The user's verified badge status.",
          "type": "boolean"
        },
        "userId": {
          "format": "int64",
          "type": "integer"
        },
        "username": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "Roblox.Groups.Api.UserGroupRoleResponse": {
      "description": "A user group role response model",
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/Roblox.Groups.Api.Models.Response.UserModel"
        },
        "role": {
          "$ref": "#/definitions/Roblox.Groups.Api.GroupRoleResponse"
        }
      }
    },
    "Roblox.Platform.Core.ExclusiveStartPaging.IExclusiveStartKeyInfo[System.Int64]": {
      "type": "object",
      "properties": {
        "SortOrder": {
          "format": "int32",
          "description": " ['Asc' = 1, 'Desc' = 2]",
          "enum": [
            1,
            2
          ],
          "type": "integer",
          "readOnly": true
        },
        "PagingDirection": {
          "format": "int32",
          "description": " ['Forward' = 1, 'Backward' = 2]",
          "enum": [
            1,
            2
          ],
          "type": "integer",
          "readOnly": true
        },
        "Count": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Roblox.Web.Responses.Groups.GroupBasicResponse": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "memberCount": {
          "format": "int64",
          "type": "integer"
        },
        "hasVerifiedBadge": {
          "type": "boolean"
        }
      }
    },
    "Roblox.Web.Responses.Groups.GroupResponseV2": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Roblox.Web.Responses.RelatedEntityTypeResponse[Roblox.Web.Responses.Groups.GroupOwnerType]"
        },
        "memberCount": {
          "format": "int64",
          "type": "integer"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "hasVerifiedBadge": {
          "type": "boolean"
        }
      }
    },
    "Roblox.Web.Responses.Groups.GroupRoleBasicResponse": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "rank": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Roblox.Web.Responses.RelatedEntityTypeResponse[Roblox.Web.Responses.Groups.GroupOwnerType]": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "description": " ['User' = 0]",
          "enum": [
            0
          ],
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Roblox.Web.WebAPI.ExclusiveStartRequest[System.Int64]": {
      "type": "object",
      "properties": {
        "ExclusiveStartKeyInfo": {
          "$ref": "#/definitions/Roblox.Platform.Core.ExclusiveStartPaging.IExclusiveStartKeyInfo[System.Int64]"
        },
        "CursorRecipe": {
          "type": "string"
        }
      }
    },
    "Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Groups.Api.GroupMembershipResponse]": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Roblox.Groups.Api.GroupMembershipResponse"
          }
        }
      }
    },
    "Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Web.Responses.Groups.GroupResponseV2]": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Roblox.Web.Responses.Groups.GroupResponseV2"
          }
        }
      }
    },
    "Roblox.Web.WebAPI.Models.ApiPageResponse[Roblox.Groups.Api.GroupWallPostV2Model]": {
      "type": "object",
      "properties": {
        "previousPageCursor": {
          "type": "string"
        },
        "nextPageCursor": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Roblox.Groups.Api.GroupWallPostV2Model"
          }
        }
      }
    }
  }
}