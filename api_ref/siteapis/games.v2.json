{
    "swagger": "2.0",
    "info": {
      "title": "Games Api v2",
      "version": "v2"
    },
    "host": "games.roblox.com",
    "schemes": [
      "https"
    ],
    "paths": {
      "/v2/games/{universeId}/media": {
        "get": {
          "tags": [
            "GamesV2"
          ],
          "summary": "Get the game media data",
          "produces": [
            "application/json",
            "text/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "universeId",
              "description": "The id of the universe we get media data from.",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Web.Responses.Games.GameMediaItemResponseV2]"
              }
            },
            "400": {
              "description": "3: The universe's root place is invalid."
            },
            "404": {
              "description": "2: The requested universe does not exist."
            }
          },
          "properties": {
            "internal": false,
            "metricIds": [
              "GamesV2:GetGameMediaData"
            ]
          }
        }
      },
      "/v2/groups/{groupId}/games": {
        "get": {
          "tags": [
            "GamesV2"
          ],
          "summary": "Gets games created by the specified group.",
          "produces": [
            "application/json",
            "text/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "groupId",
              "description": "The group Id.",
              "required": true,
              "type": "integer",
              "format": "int64"
            },
            {
              "in": "query",
              "name": "accessFilter",
              "description": "Filtering option via access level.",
              "type": "integer",
              "format": "int32",
              "default": 1,
              "enum": [
                1,
                2,
                4
              ]
            },
            {
              "in": "query",
              "name": "limit",
              "description": "The number of results per request.",
              "type": "integer",
              "format": "int32",
              "default": 10,
              "enum": [
                10,
                25,
                50,
                100
              ]
            },
            {
              "in": "query",
              "name": "cursor",
              "description": "The paging cursor for the previous or next page.",
              "type": "string"
            },
            {
              "in": "query",
              "name": "sortOrder",
              "description": "The order the results are sorted in.",
              "type": "string",
              "default": "Asc",
              "enum": [
                "Asc",
                "Desc"
              ]
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiPageResponse[Roblox.Web.Responses.Games.GameResponseV2]"
              }
            },
            "403": {
              "description": "3: Not authorized."
            },
            "500": {
              "description": "0: Compliance Context service is unavailable."
            }
          },
          "properties": {
            "internal": false,
            "metricIds": [
              "GamesV2:GetGroupGames"
            ]
          }
        }
      },
      "/v2/groups/{groupId}/gamesV2": {
        "get": {
          "tags": [
            "GamesV2"
          ],
          "summary": "Gets games created by the specified group. This will replace V1 after validation. Note that this can only used for public/all universes.",
          "produces": [
            "application/json",
            "text/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "groupId",
              "description": "The group Id.",
              "required": true,
              "type": "integer",
              "format": "int64"
            },
            {
              "in": "query",
              "name": "accessFilter",
              "description": "Filtering option via access level.",
              "type": "integer",
              "format": "int32",
              "default": 1,
              "enum": [
                1,
                2,
                4
              ]
            },
            {
              "in": "query",
              "name": "limit",
              "description": "The number of results per request.",
              "type": "integer",
              "format": "int32",
              "default": 10,
              "enum": [
                10,
                25,
                50,
                100
              ]
            },
            {
              "in": "query",
              "name": "cursor",
              "description": "The paging cursor for the previous or next page.",
              "type": "string"
            },
            {
              "in": "query",
              "name": "sortOrder",
              "description": "The order the results are sorted in.",
              "type": "string",
              "default": "Asc",
              "enum": [
                "Asc",
                "Desc"
              ]
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiPageResponse[Roblox.Web.Responses.Games.GameResponseV2]"
              }
            },
            "500": {
              "description": "0: Compliance Context service is unavailable."
            },
            "501": {
              "description": "1: Code path is not Implemented."
            }
          },
          "properties": {
            "internal": false,
            "metricIds": [
              "GamesV2:GetGroupGamesV2"
            ]
          }
        }
      },
      "/v2/users/{userId}/favorite/games": {
        "get": {
          "tags": [
            "GamesV2"
          ],
          "summary": "Gets users favorite games.",
          "produces": [
            "application/json",
            "text/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "userId",
              "description": "The user Id.",
              "required": true,
              "type": "integer",
              "format": "int64"
            },
            {
              "in": "query",
              "name": "accessFilter",
              "description": "Filtering option via access level.",
              "type": "integer",
              "format": "int32",
              "default": 2,
              "enum": [
                1,
                2,
                4
              ]
            },
            {
              "in": "query",
              "name": "limit",
              "description": "The number of results per request.",
              "type": "integer",
              "format": "int32",
              "default": 10,
              "enum": [
                10,
                25,
                50
              ]
            },
            {
              "in": "query",
              "name": "cursor",
              "description": "The paging cursor for the previous or next page.",
              "type": "string"
            },
            {
              "in": "query",
              "name": "sortOrder",
              "description": "The order the results are sorted in.",
              "type": "string",
              "default": "Asc",
              "enum": [
                "Asc",
                "Desc"
              ]
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiPageResponse[Roblox.Web.Responses.Games.GameResponseV2]"
              }
            }
          },
          "deprecated": true,
          "properties": {
            "internal": false,
            "obsoleteMessage": "This endpoint will be deprecated on 1/31/2024. As part of soft deprecation we will return empty lists for all users no matter what from now until 1/31/2024. Please use GET www.roblox.com/users/favorites/list-json?assetTypeId=9&userId={userId}&itemsPerPage={number}&pageNumber={pageNumber} as replacement.",
            "metricIds": [
              "GamesV2:GetUserFavoriteGames"
            ]
          }
        }
      },
      "/v2/users/{userId}/games": {
        "get": {
          "tags": [
            "GamesV2"
          ],
          "summary": "Gets games created by the specified user.",
          "produces": [
            "application/json",
            "text/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "userId",
              "description": "The user Id.",
              "required": true,
              "type": "integer",
              "format": "int64"
            },
            {
              "in": "query",
              "name": "accessFilter",
              "description": "Filtering option via access level.",
              "type": "integer",
              "format": "int32",
              "default": 2,
              "enum": [
                1,
                2,
                4
              ]
            },
            {
              "in": "query",
              "name": "limit",
              "description": "The number of results per request.",
              "type": "integer",
              "format": "int32",
              "default": 10,
              "enum": [
                10,
                25,
                50
              ]
            },
            {
              "in": "query",
              "name": "cursor",
              "description": "The paging cursor for the previous or next page.",
              "type": "string"
            },
            {
              "in": "query",
              "name": "sortOrder",
              "description": "The order the results are sorted in.",
              "type": "string",
              "default": "Asc",
              "enum": [
                "Asc",
                "Desc"
              ]
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiPageResponse[Roblox.Web.Responses.Games.GameResponseV2]"
              }
            }
          },
          "properties": {
            "internal": false,
            "metricIds": [
              "GamesV2:GetUserGames"
            ]
          }
        }
      }
    },
    "definitions": {
      "Roblox.Platform.Core.ExclusiveStartPaging.IExclusiveStartKeyInfo[System.Int32]": {
        "type": "object",
        "properties": {
          "SortOrder": {
            "format": "int32",
            "description": " ['Asc' = 1, 'Desc' = 2]",
            "enum": [
              1,
              2
            ],
            "type": "integer",
            "readOnly": true
          },
          "PagingDirection": {
            "format": "int32",
            "description": " ['Forward' = 1, 'Backward' = 2]",
            "enum": [
              1,
              2
            ],
            "type": "integer",
            "readOnly": true
          },
          "Count": {
            "format": "int32",
            "type": "integer",
            "readOnly": true
          }
        }
      },
      "Roblox.Platform.Core.ExclusiveStartPaging.IExclusiveStartKeyInfo[System.Int64]": {
        "type": "object",
        "properties": {
          "SortOrder": {
            "format": "int32",
            "description": " ['Asc' = 1, 'Desc' = 2]",
            "enum": [
              1,
              2
            ],
            "type": "integer",
            "readOnly": true
          },
          "PagingDirection": {
            "format": "int32",
            "description": " ['Forward' = 1, 'Backward' = 2]",
            "enum": [
              1,
              2
            ],
            "type": "integer",
            "readOnly": true
          },
          "Count": {
            "format": "int32",
            "type": "integer",
            "readOnly": true
          }
        }
      },
      "Roblox.Web.Responses.Games.GameMediaItemResponseV2": {
        "description": "Response model for getting the game media item",
        "type": "object",
        "properties": {
          "assetTypeId": {
            "format": "int64",
            "description": "The media item type id",
            "type": "integer"
          },
          "assetType": {
            "description": "The media item type, Image or YouTubeVideo",
            "type": "string"
          },
          "imageId": {
            "format": "int64",
            "description": "The media item image id",
            "type": "integer"
          },
          "videoHash": {
            "description": "The media item video hash",
            "type": "string"
          },
          "videoTitle": {
            "description": "The video title for video items.",
            "type": "string"
          },
          "approved": {
            "description": "The media item is approved or not",
            "type": "boolean"
          },
          "altText": {
            "description": "The media item alt text",
            "type": "string"
          }
        }
      },
      "Roblox.Web.Responses.Games.GameResponseV2": {
        "description": "A response model representing a game.",
        "type": "object",
        "properties": {
          "id": {
            "format": "int64",
            "description": "The game (universe) Id.",
            "type": "integer"
          },
          "name": {
            "description": "The game name.",
            "type": "string"
          },
          "description": {
            "description": "The game description.",
            "type": "string"
          },
          "creator": {
            "$ref": "#/definitions/Roblox.Web.Responses.RelatedEntityTypeResponse[Roblox.Platform.Core.CreatorType]"
          },
          "rootPlace": {
            "$ref": "#/definitions/Roblox.Web.Responses.RelatedEntityTypeResponse[Roblox.Platform.Assets.AssetType]"
          },
          "created": {
            "format": "date-time",
            "description": "When the game was created.",
            "type": "string"
          },
          "updated": {
            "format": "date-time",
            "description": "When the game was last updated.",
            "type": "string"
          },
          "placeVisits": {
            "format": "int64",
            "description": "The number of place visits for this game.",
            "type": "integer"
          }
        }
      },
      "Roblox.Web.Responses.RelatedEntityTypeResponse[Roblox.Platform.Assets.AssetType]": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "type": {
            "format": "int32",
            "description": " ['Image' = 1, 'TShirt' = 2, 'Audio' = 3, 'Mesh' = 4, 'Lua' = 5, 'HTML' = 6, 'Text' = 7, 'Hat' = 8, 'Place' = 9, 'Model' = 10, 'Shirt' = 11, 'Pants' = 12, 'Decal' = 13, 'Avatar' = 16, 'Head' = 17, 'Face' = 18, 'Gear' = 19, 'Badge' = 21, 'GroupEmblem' = 22, 'Animation' = 24, 'Arms' = 25, 'Legs' = 26, 'Torso' = 27, 'RightArm' = 28, 'LeftArm' = 29, 'LeftLeg' = 30, 'RightLeg' = 31, 'Package' = 32, 'YouTubeVideo' = 33, 'GamePass' = 34, 'App' = 35, 'Code' = 37, 'Plugin' = 38, 'SolidModel' = 39, 'MeshPart' = 40, 'HairAccessory' = 41, 'FaceAccessory' = 42, 'NeckAccessory' = 43, 'ShoulderAccessory' = 44, 'FrontAccessory' = 45, 'BackAccessory' = 46, 'WaistAccessory' = 47, 'ClimbAnimation' = 48, 'DeathAnimation' = 49, 'FallAnimation' = 50, 'IdleAnimation' = 51, 'JumpAnimation' = 52, 'RunAnimation' = 53, 'SwimAnimation' = 54, 'WalkAnimation' = 55, 'PoseAnimation' = 56, 'LocalizationTableManifest' = 59, 'LocalizationTableTranslation' = 60, 'EmoteAnimation' = 61, 'Video' = 62, 'TexturePack' = 63, 'TShirtAccessory' = 64, 'ShirtAccessory' = 65, 'PantsAccessory' = 66, 'JacketAccessory' = 67, 'SweaterAccessory' = 68, 'ShortsAccessory' = 69, 'LeftShoeAccessory' = 70, 'RightShoeAccessory' = 71, 'DressSkirtAccessory' = 72, 'FontFamily' = 73, 'FontFace' = 74, 'MeshHiddenSurfaceRemoval' = 75, 'EyebrowAccessory' = 76, 'EyelashAccessory' = 77, 'MoodAnimation' = 78, 'DynamicHead' = 79, 'CodeSnippet' = 80, 'AdsVideo' = 81, 'OtaUpdate' = 82]",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              16,
              17,
              18,
              19,
              21,
              22,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82
            ],
            "x-enum-varnames": ["Image", "TShirt", "Audio", "Mesh", "Lua", "HTML", "Text", "Hat", "Place", "Model", "Shirt", "Pants", "Decal", "Avatar", "Head", "Face", "Gear", "Badge", "GroupEmblem", "Animation", "Arms", "Legs", "Torso", "RightArm", "LeftArm", "LeftLeg", "RightLeg", "Package", "YouTubeVideo", "GamePass", "App", "Code", "Plugin", "SolidModel", "MeshPart", "HairAccessory", "FaceAccessory", "NeckAccessory", "ShoulderAccessory", "FrontAccessory", "BackAccessory", "WaistAccessory", "ClimbAnimation", "DeathAnimation", "FallAnimation", "IdleAnimation", "JumpAnimation", "RunAnimation", "SwimAnimation", "WalkAnimation", "PoseAnimation", "LocalizationTableManifest", "LocalizationTableTranslation", "EmoteAnimation", "Video", "TexturePack", "TShirtAccessory", "ShirtAccessory", "PantsAccessory", "JacketAccessory", "SweaterAccessory", "ShortsAccessory", "LeftShoeAccessory", "RightShoeAccessory", "DressSkirtAccessory", "FontFamily", "FontFace", "MeshHiddenSurfaceRemoval", "EyebrowAccessory", "EyelashAccessory", "MoodAnimation", "DynamicHead", "CodeSnippet", "AdsVideo", "OtaUpdate"],
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Roblox.Web.Responses.RelatedEntityTypeResponse[Roblox.Platform.Core.CreatorType]": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "type": {
            "format": "int32",
            "description": " ['User' = 0, 'Group' = 1]",
            "enum": [
              0,
              1
            ],
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Roblox.Web.WebAPI.ExclusiveStartRequest[System.Int32]": {
        "type": "object",
        "properties": {
          "ExclusiveStartKeyInfo": {
            "$ref": "#/definitions/Roblox.Platform.Core.ExclusiveStartPaging.IExclusiveStartKeyInfo[System.Int32]"
          },
          "CursorRecipe": {
            "type": "string"
          }
        }
      },
      "Roblox.Web.WebAPI.ExclusiveStartRequest[System.Int64]": {
        "type": "object",
        "properties": {
          "ExclusiveStartKeyInfo": {
            "$ref": "#/definitions/Roblox.Platform.Core.ExclusiveStartPaging.IExclusiveStartKeyInfo[System.Int64]"
          },
          "CursorRecipe": {
            "type": "string"
          }
        }
      },
      "Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Web.Responses.Games.GameMediaItemResponseV2]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Roblox.Web.Responses.Games.GameMediaItemResponseV2"
            }
          }
        }
      },
      "Roblox.Web.WebAPI.Models.ApiPageResponse[Roblox.Web.Responses.Games.GameResponseV2]": {
        "type": "object",
        "properties": {
          "previousPageCursor": {
            "type": "string"
          },
          "nextPageCursor": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Roblox.Web.Responses.Games.GameResponseV2"
            }
          }
        }
      }
    }
  }