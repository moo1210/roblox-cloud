{
  "swagger": "2.0",
  "info": {
    "title": "Avatar Api v2",
    "version": "v2"
  },
  "host": "avatar.roblox.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/v2/avatar/avatar": {
      "get": {
        "tags": [
          "AvatarV2"
        ],
        "summary": "Returns details about the authenticated user's avatar",
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.AvatarModelV3"
            }
          },
          "401": {
            "description": "0: Authorization has been denied for this request."
          }
        },
        "properties": {
          "internal": false,
          "metricIds": [
            "AvatarV2:GetMyAvatarModel"
          ]
        }
      }
    },
    "/v2/avatar/users/{userId}/avatar": {
      "get": {
        "tags": [
          "AvatarV2"
        ],
        "summary": "Returns details about a specified user's avatar",
        "description": "Includes assets, bodycolors, and playerAvatarType.",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.AvatarModelV3"
            }
          },
          "400": {
            "description": "1: The specified user does not exist.\r\n2: An account for the given userId does not exist!"
          }
        },
        "properties": {
          "internal": false,
          "metricIds": [
            "AvatarV2:GetAvatarModel"
          ]
        }
      }
    },
    "/v2/avatar/users/{userId}/outfits": {
      "get": {
        "tags": [
          "AvatarV2"
        ],
        "summary": "Gets a list of outfits for the specified user.",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user id.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "paginationToken",
            "description": "The token received from the response to get the next page. For the first request, this value should be empty. Note : If no value is sent the 1st page will be returned.",
            "type": "string",
            "default": ""
          },
          {
            "in": "query",
            "name": "outfitType",
            "description": "The outfit type being searched for, null will return all outfitTypes",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page number of the current page of requests, default is 1.",
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          {
            "in": "query",
            "name": "itemsPerPage",
            "description": "The max number of outfits that can be returned.",
            "type": "integer",
            "format": "int32",
            "default": 25
          },
          {
            "in": "query",
            "name": "isEditable",
            "description": "Whether the outfits are editable. A null value will lead to no filtering.",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.AvatarPageResponse[Roblox.Api.Avatar.Models.OutfitModel]"
            }
          },
          "400": {
            "description": "1: The specified user does not exist.\r\n2: An account for the given userId does not exist!"
          }
        },
        "properties": {
          "internal": false,
          "metricIds": [
            "AvatarV2:GetUserOutfitListModel"
          ]
        }
      }
    },
    "/v2/avatar/set-body-colors": {
      "post": {
        "tags": [
          "AvatarV2"
        ],
        "summary": "Sets the authenticated user's body colors",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "bodyColorsModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Roblox.Platform.Avatar.BodyColorsModelV2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.AvatarApiSuccessResponse"
            }
          },
          "401": {
            "description": "0: Authorization has been denied for this request."
          },
          "403": {
            "description": "0: Token Validation Failed"
          }
        },
        "properties": {
          "internal": false,
          "metricIds": [
            "AvatarV2:SetBodyColors"
          ]
        }
      }
    },
    "/v2/avatar/set-wearing-assets": {
      "post": {
        "tags": [
          "AvatarV2"
        ],
        "summary": "Sets the avatar's current assets to the list",
        "description": "Only allows items that you own, are not expired, and are wearable asset types.\r\nAny assets being worn before this method is called are automatically removed.",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "wearRequestModel",
            "description": "Model of assets to be worn",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.WearRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.WearResponseModel"
            }
          },
          "400": {
            "description": "3: Invalid assetId\r\n5: Meta does not apply to specified asset type\r\n7: Required meta is not provided for the specific asset type"
          },
          "401": {
            "description": "0: Authorization has been denied for this request."
          },
          "403": {
            "description": "0: Token Validation Failed"
          },
          "500": {
            "description": "2: Failed to wear asset."
          }
        },
        "properties": {
          "internal": false,
          "metricIds": [
            "AvatarV2:SetWearingAssets"
          ]
        }
      }
    },
    "/v2/outfits/{userOutfitId}/update": {
      "post": {
        "tags": [
          "OutfitsV2"
        ],
        "summary": "Updates the contents of the outfit.",
        "description": "Fails if the user does not own any of the assetIds or if they are not wearable asset types.",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userOutfitId",
            "description": "The user outfit id.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "outfitUpdateModel",
            "description": "The updated outfit",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.OutfitUpdateModelV2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.ApiEmptyResponseModel"
            }
          },
          "400": {
            "description": "1: The specified userOutfit does not exist!\r\n3: Body colors must be valid BrickColor IDs\r\n4: Invalid outfit name\r\n5: Asset is not wearable by you\r\n7: Invalid assetIds\r\n8: Invalid Player Avatar Type. Valid types are R6 and R15"
          },
          "401": {
            "description": "0: Authorization has been denied for this request."
          },
          "403": {
            "description": "0: Token Validation Failed\r\n2: You don't have permission to update this outfit."
          },
          "500": {
            "description": "6: An error occurred while trying to update the outfit"
          }
        },
        "properties": {
          "internal": false,
          "metricIds": [
            "OutfitsV2:UpdateOutfit"
          ]
        }
      }
    },
    "/v2/outfits/create": {
      "post": {
        "tags": [
          "OutfitsV2"
        ],
        "summary": "Creates a new outfit.",
        "description": "Fails if any of the assetIds are not owned by the user, or not wearable types.\r\nThe name property of the request is optional as one will be auto-generated when the request has a null name.",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "outfitUpdateModel",
            "description": "The new outfit",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.OutfitUpdateModelV2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.ApiEmptyResponseModel"
            }
          },
          "400": {
            "description": "3: Body colors must be valid BrickColor IDs\r\n4: Invalid outfit name\r\n5: Asset is not wearable by you and was not added to the outfit\r\n7: Invalid Player Avatar Type. Valid types are R6 and R15\r\n8: Invalid assetIds\r\n9: Meta does not apply to specified asset type\r\n10: Required meta is not provided for the specific asset type"
          },
          "401": {
            "description": "0: Authorization has been denied for this request."
          },
          "403": {
            "description": "0: Token Validation Failed\r\n1: You already have the maximum number of outfits"
          },
          "500": {
            "description": "6: An error occurred while creating the outfit"
          }
        },
        "properties": {
          "internal": false,
          "metricIds": [
            "OutfitsV2:CreateOutfit"
          ]
        }
      }
    },
    "/v2/outfits/{userOutfitId}": {
      "patch": {
        "tags": [
          "OutfitsV2"
        ],
        "summary": "Updates the contents of an outfit.",
        "description": "Fails if the user does not own any of the assetIds or if they are not wearable asset types.\r\nAccepts partial updates.",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userOutfitId",
            "description": "The user outfit id.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "outfitUpdateModel",
            "description": "The updated outfit",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.OutfitUpdateModelV2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.OutfitModel"
            }
          },
          "400": {
            "description": "1: The specified userOutfit does not exist!\r\n1: Must provide both assetIds and bodyColors in to update outfit contents.\r\n3: Body colors must be valid BrickColor IDs\r\n4: Invalid outfit name\r\n5: Asset is not wearable by you\r\n8: Invalid Player Avatar Type. Valid types are R6 and R15\r\n11: Meta does not apply to specified asset type\r\n12: Meta is required for this specific asset type"
          },
          "401": {
            "description": "0: Authorization has been denied for this request."
          },
          "403": {
            "description": "0: Token Validation Failed\r\n2: You don't have permission to update this outfit."
          },
          "500": {
            "description": "6: An error occurred while trying to update the outfit"
          }
        },
        "properties": {
          "internal": false,
          "metricIds": [
            "OutfitsV2:UpdateOutfitPatch"
          ]
        }
      }
    }
  },
  "definitions": {
    "Roblox.Api.Avatar.Models.AssetMetaModelV1": {
      "description": "Exhaustive model denoting all possible metadata fields of an asset",
      "type": "object",
      "properties": {
        "order": {
          "format": "int32",
          "description": "Layered-clothing order",
          "type": "integer"
        },
        "puffiness": {
          "format": "float",
          "description": "Layered-clothing puffiness",
          "type": "number"
        },
        "position": {
          "$ref": "#/definitions/Roblox.Avatarcore.Shared.V3Beta1.AssetPosition"
        },
        "rotation": {
          "$ref": "#/definitions/Roblox.Avatarcore.Shared.V3Beta1.AssetRotation"
        },
        "scale": {
          "$ref": "#/definitions/Roblox.Avatarcore.Shared.V3Beta1.AssetScale"
        },
        "version": {
          "format": "int32",
          "description": "Client-authoritative meta model format version\r\n- default is always 1",
          "type": "integer"
        }
      }
    },
    "Roblox.Api.Avatar.Models.AssetModelV2": {
      "description": "A model containing details about an asset\r\n- V2: adds CurrentVersionId, AssetMetaModel",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The id",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "assetType": {
          "$ref": "#/definitions/Roblox.Api.Avatar.Models.AssetTypeModel"
        },
        "currentVersionId": {
          "format": "int64",
          "description": "Id of the current version of asset",
          "type": "integer"
        },
        "meta": {
          "$ref": "#/definitions/Roblox.Api.Avatar.Models.AssetMetaModelV1"
        }
      }
    },
    "Roblox.Api.Avatar.Models.AssetTypeModel": {
      "description": "A model containing details about an asset type",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The id",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        }
      }
    },
    "Roblox.Api.Avatar.Models.AssetWearModel": {
      "description": "A model which contains\r\n- an asset id\r\n- AssetMetaModel",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "An asset id",
          "type": "integer"
        },
        "meta": {
          "$ref": "#/definitions/Roblox.Api.Avatar.Models.AssetMetaModelV1"
        }
      }
    },
    "Roblox.Api.Avatar.Models.AvatarApiSuccessResponse": {
      "description": "Success response class",
      "type": "object",
      "properties": {
        "success": {
          "description": "Gets or sets a value indicating whether the request was a success.",
          "type": "boolean"
        }
      }
    },
    "Roblox.Api.Avatar.Models.AvatarModelV3": {
      "description": "A model containing details about an avatar",
      "type": "object",
      "properties": {
        "scales": {
          "$ref": "#/definitions/Roblox.Web.Responses.Avatar.ScaleModel"
        },
        "playerAvatarType": {
          "format": "int32",
          "description": "The avatar type ['R6' = 1, 'R15' = 3]",
          "enum": [
            1,
            3
          ],
          "type": "integer"
        },
        "bodyColor3s": {
          "$ref": "#/definitions/Roblox.Api.Avatar.Models.BodyColors3Model"
        },
        "assets": {
          "description": "The assets worn on the character",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Roblox.Api.Avatar.Models.AssetModelV2"
          }
        },
        "defaultShirtApplied": {
          "description": "Whether default clothing has been applied to this avatar.",
          "type": "boolean"
        },
        "defaultPantsApplied": {
          "description": "Whether default clothing has been applied to this avatar.",
          "type": "boolean"
        },
        "emotes": {
          "description": "The emotes on the character",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Roblox.Api.Avatar.Models.EmoteResponseModel"
          }
        }
      }
    },
    "Roblox.Api.Avatar.Models.AvatarPageResponse[Roblox.Api.Avatar.Models.OutfitModel]": {
      "description": "Avatar page response.",
      "type": "object",
      "properties": {
        "data": {
          "description": "The data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Roblox.Api.Avatar.Models.OutfitModel"
          }
        },
        "paginationToken": {
          "description": "A non empty string indicates that there is more data available than this response contains. An empty string indicates the last page.",
          "type": "string"
        }
      }
    },
    "Roblox.Api.Avatar.Models.BodyColors3Model": {
      "description": "A model containing RGB hex colors for each body part.",
      "type": "object",
      "properties": {
        "headColor3": {
          "description": "The RGB hex color for head color, e.g. #FFFFFF",
          "type": "string"
        },
        "torsoColor3": {
          "description": "The RGB hex color for torso color, e.g. #FFFFFF",
          "type": "string"
        },
        "rightArmColor3": {
          "description": "The RGB hex color for right arm color, e.g. #FFFFFF",
          "type": "string"
        },
        "leftArmColor3": {
          "description": "The RGB hex color for left arm color, e.g. #FFFFFF",
          "type": "string"
        },
        "rightLegColor3": {
          "description": "The RGB hex color for right leg color, e.g. #FFFFFF",
          "type": "string"
        },
        "leftLegColor3": {
          "description": "The RGB hex color for left leg color, e.g. #FFFFFF",
          "type": "string"
        }
      }
    },
    "Roblox.Api.Avatar.Models.BodyColorsModel": {
      "description": "A model container BrickColor ids for each body part.",
      "type": "object",
      "properties": {
        "headColorId": {
          "format": "int32",
          "description": "The BrickColor id for head color",
          "type": "integer"
        },
        "torsoColorId": {
          "format": "int32",
          "description": "The BrickColor id for torso color",
          "type": "integer"
        },
        "rightArmColorId": {
          "format": "int32",
          "description": "The BrickColor id for right arm color",
          "type": "integer"
        },
        "leftArmColorId": {
          "format": "int32",
          "description": "The BrickColor id for left arm color",
          "type": "integer"
        },
        "rightLegColorId": {
          "format": "int32",
          "description": "The BrickColor id for right leg color",
          "type": "integer"
        },
        "leftLegColorId": {
          "format": "int32",
          "description": "The BrickColor id for left leg color",
          "type": "integer"
        }
      }
    },
    "Roblox.Api.Avatar.Models.EmoteResponseModel": {
      "description": "Response object representing a user's emote",
      "type": "object",
      "properties": {
        "assetId": {
          "format": "int64",
          "description": "The asset id of the emote",
          "type": "integer"
        },
        "assetName": {
          "description": "The name of the emote",
          "type": "string"
        },
        "position": {
          "format": "int32",
          "description": "The position the emote is equipped to",
          "type": "integer"
        }
      }
    },
    "Roblox.Api.Avatar.Models.OutfitModel": {
      "description": "A slim model for user outfits",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The id",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "isEditable": {
          "description": "Whether the outfit can be modified by the user",
          "type": "boolean"
        }
      }
    },
    "Roblox.Api.Avatar.Models.OutfitUpdateModelV2": {
      "description": "A model containing details needed to update or create an outfit",
      "type": "object",
      "properties": {
        "name": {
          "description": "The outfit name",
          "type": "string"
        },
        "bodyColors": {
          "$ref": "#/definitions/Roblox.Api.Avatar.Models.BodyColorsModel"
        },
        "assets": {
          "description": "Array of assets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Roblox.Api.Avatar.Models.AssetWearModel"
          }
        },
        "scale": {
          "$ref": "#/definitions/Roblox.Web.Responses.Avatar.ScaleModel"
        },
        "playerAvatarType": {
          "description": "The avatar scale",
          "type": "string"
        },
        "outfitType": {
          "format": "int32",
          "description": "The type of outfit ['Invalid' = 0, 'Avatar' = 1, 'DynamicHead' = 2, 'InExperienceBody' = 3]",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        }
      }
    },
    "Roblox.Api.Avatar.Models.WearRequestModel": {
      "description": "A model that contains a list of AssetWear models",
      "type": "object",
      "properties": {
        "assets": {
          "description": "The asset ids",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Roblox.Api.Avatar.Models.AssetWearModel"
          }
        }
      }
    },
    "Roblox.Api.Avatar.Models.WearResponseModel": {
      "description": "A model for wear outfit responses",
      "type": "object",
      "properties": {
        "invalidAssets": {
          "description": "The assets that could not be worn\r\nUnlike invalidAssetIds, only contains assets that are wearable types",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Roblox.Api.Avatar.Models.AssetModelV2"
          }
        },
        "invalidAssetIds": {
          "description": "The asset ids that could not be worn",
          "type": "array",
          "items": {
            "format": "int64",
            "type": "integer"
          }
        },
        "success": {
          "description": "Whether or not all the outfit contents were successfully worn",
          "type": "boolean"
        }
      }
    },
    "Roblox.Avatarcore.Shared.V3Beta1.AssetPosition": {
      "type": "object",
      "properties": {
        "X": {
          "format": "float",
          "type": "number"
        },
        "Y": {
          "format": "float",
          "type": "number"
        },
        "Z": {
          "format": "float",
          "type": "number"
        }
      }
    },
    "Roblox.Avatarcore.Shared.V3Beta1.AssetRotation": {
      "type": "object",
      "properties": {
        "X": {
          "format": "float",
          "type": "number"
        },
        "Y": {
          "format": "float",
          "type": "number"
        },
        "Z": {
          "format": "float",
          "type": "number"
        }
      }
    },
    "Roblox.Avatarcore.Shared.V3Beta1.AssetScale": {
      "type": "object",
      "properties": {
        "Scale": {
          "format": "float",
          "type": "number"
        },
        "X": {
          "format": "float",
          "type": "number"
        },
        "Y": {
          "format": "float",
          "type": "number"
        },
        "Z": {
          "format": "float",
          "type": "number"
        }
      }
    },
    "Roblox.Platform.Avatar.BodyColorsModelV2": {
      "type": "object",
      "properties": {
        "headColor3": {
          "type": "string"
        },
        "torsoColor3": {
          "type": "string"
        },
        "rightArmColor3": {
          "type": "string"
        },
        "leftArmColor3": {
          "type": "string"
        },
        "rightLegColor3": {
          "type": "string"
        },
        "leftLegColor3": {
          "type": "string"
        }
      }
    },
    "Roblox.Web.Responses.Avatar.ScaleModel": {
      "type": "object",
      "properties": {
        "height": {
          "format": "double",
          "type": "number"
        },
        "width": {
          "format": "double",
          "type": "number"
        },
        "head": {
          "format": "double",
          "type": "number"
        },
        "depth": {
          "format": "double",
          "type": "number"
        },
        "proportion": {
          "format": "double",
          "type": "number"
        },
        "bodyType": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Roblox.Web.WebAPI.ApiEmptyResponseModel": {
      "type": "object"
    }
  }
}